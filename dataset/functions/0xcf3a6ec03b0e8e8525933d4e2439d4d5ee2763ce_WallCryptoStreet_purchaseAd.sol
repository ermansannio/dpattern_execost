contract WallCryptoStreet {
function purchaseAd(uint _companyId, string adText, string adLink) public payable {
        require(msg.value == companies[_companyId].curAdPrice);

        // Save text and link for the ad
        companies[_companyId].curAdText = adText;
        companies[_companyId].curAdLink = adLink;

        // Distribute the money paid among investors, company owner and dev
        uint256 commission1percent = (msg.value / 100);
        companies[_companyId].ownerAddress.transfer(commission1percent * 40);   // Company owner gets 40% of the amount paid
        cfoAddress.transfer(commission1percent * 10);   // Dev gets a commission of 10% of the amount paid

        uint256 commissionShareholders = commission1percent * 50;   // 50% of the amount paid is distributed to shareholders
        uint256 commissionOneShareholder = commissionShareholders / 5;

        // Get the list of shareholders for this company
        address[] memory shareholdersAddresses = getCompanyShareholders(_companyId);
        // We loop thrugh all of the shareholders and transfer their commission
        for (uint8 i = 0; i < 5; i++) {
            shareholdersAddresses[i].transfer(commissionOneShareholder);
        }

        // Raise the price of the advertising
        companies[_companyId].curAdPrice = companies[_companyId].curAdPrice + (companies[_companyId].curAdPrice / 2);

        // Increment volume generated by company
        companies[_companyId].volume = companies[_companyId].volume + msg.value;
    }
}