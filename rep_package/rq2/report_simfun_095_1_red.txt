Similarity Report:

Median: 53379.0. Tollerance range: 50710.05 - 56047.95

File 1: 0x9ce0b408a4f15d222f6624895687efa1e1a4247b_ETHERKUN_feed50.sol 46835.0 False
File 2: 0x9ce0b408a4f15d222f6624895687efa1e1a4247b_ETHERKUN_feed10.sol 76847.0 True
Similarity: 0.999862547270576
Difference:
--- file1
+++ file2
@@ -1,17 +1,17 @@
 contract ETHERKUN {
-function feed50(uint _kunId) external onlyOwnerOf(_kunId) payable {
-    require(msg.value == testFee * 50);
+function feed10(uint _kunId) external onlyOwnerOf(_kunId) payable {
+    require(msg.value == testFee * 10);
     kun storage mykun = kuns[_kunId];
     uint oldAtk = mykun.atk;
     uint random = randMod();
     if (random < 20) {
-        mykun.atk = mykun.atk.add(2750);
+        mykun.atk = mykun.atk.add(550);
     } else if (random < 70) {
-        mykun.atk = mykun.atk.add(5500);
+        mykun.atk = mykun.atk.add(1100);
     } else if (random < 90) {
-        mykun.atk = mykun.atk.add(11000);
+        mykun.atk = mykun.atk.add(2200);
     } else {
-         mykun.atk = mykun.atk.add(27500);
+         mykun.atk = mykun.atk.add(5500);
     }
     mykun.price = mykun.price.add(msg.value);
     _triggerCooldown(mykun);

File 1: 0x9ce0b408a4f15d222f6624895687efa1e1a4247b_ETHERKUN_feed100.sol 47045.0 False
File 2: 0x9ce0b408a4f15d222f6624895687efa1e1a4247b_ETHERKUN_feed10.sol 76847.0 True
Similarity: 0.9992642253228626
Difference:
--- file1
+++ file2
@@ -1,17 +1,17 @@
 contract ETHERKUN {
-function feed100(uint _kunId) external onlyOwnerOf(_kunId) payable {
-    require(msg.value == testFee * 100);
+function feed10(uint _kunId) external onlyOwnerOf(_kunId) payable {
+    require(msg.value == testFee * 10);
     kun storage mykun = kuns[_kunId];
     uint oldAtk = mykun.atk;
     uint random = randMod();
     if (random < 20) {
-        mykun.atk = mykun.atk.add(6000);
+        mykun.atk = mykun.atk.add(550);
     } else if (random < 70) {
-        mykun.atk = mykun.atk.add(12000);
+        mykun.atk = mykun.atk.add(1100);
     } else if (random < 90) {
-        mykun.atk = mykun.atk.add(24000);
+        mykun.atk = mykun.atk.add(2200);
     } else {
-         mykun.atk = mykun.atk.add(60000);
+         mykun.atk = mykun.atk.add(5500);
     }
     mykun.price = mykun.price.add(msg.value);
     _triggerCooldown(mykun);

File 1: 0xabc0f8ecf12b21dddf012bace1f7e4927a7ad403_TJFucks_makeTJs.sol 57506.0 True
File 2: 0xa965fb4db32d8600edcd5cc102a43e798bc3f08f_GPUMining_hatchEggs.sol 52823.0 False
Similarity: 0.9941324283374384
Difference:
--- file1
+++ file2
@@ -1,5 +1,5 @@
-contract TJFucks {
-function makeTJs(address ref) public{
+contract GPUMining {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;

File 1: 0xd9913F9823fA526840869f1cb8F515Bb69E6A51c_DinosaurFarmer_hatchEggs.sol 52968.0 False
File 2: 0xabc0f8ecf12b21dddf012bace1f7e4927a7ad403_TJFucks_makeTJs.sol 57506.0 True
Similarity: 0.9940770178486832
Difference:
--- file1
+++ file2
@@ -1,5 +1,5 @@
-contract DinosaurFarmer {
-function hatchEggs(address ref) public{
+contract TJFucks {
+function makeTJs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;

File 1: 0xabc0f8ecf12b21dddf012bace1f7e4927a7ad403_TJFucks_makeTJs.sol 57506.0 True
File 2: 0x09f6742e42daafae735e14ec53b5ee95b66c2886_TittyFarmer_hatchEggs.sol 52968.0 False
Similarity: 0.993776639715018
Difference:
--- file1
+++ file2
@@ -1,5 +1,5 @@
-contract TJFucks {
-function makeTJs(address ref) public{
+contract TittyFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;

File 1: 0xabc0f8ecf12b21dddf012bace1f7e4927a7ad403_TJFucks_makeTJs.sol 57506.0 True
File 2: 0x3b8b95eccce73667305b322fd89e5a148e262f62_MiningRigFarmer_hatchEggs.sol 53075.0 False
Similarity: 0.9929711275714002
Difference:
--- file1
+++ file2
@@ -1,5 +1,5 @@
-contract TJFucks {
-function makeTJs(address ref) public{
+contract MiningRigFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;

File 1: 0xabc0f8ecf12b21dddf012bace1f7e4927a7ad403_TJFucks_sellFucks.sol 57054.0 True
File 2: 0x246a3CC8430909cB9b4ea2C55064045096656792_ChickenFarm_sellEggs.sol 41999.0 False
Similarity: 0.990613042830621
Difference:
--- file1
+++ file2
@@ -1,13 +1,13 @@
-contract TJFucks {
-function sellFucks() public{
+contract ChickenFarm {
+function sellEggs() public{
         require(initialized);
-        uint256 hasEggs=getMyEggs();
-        uint256 eggValue=calculateEggSell(hasEggs);
-        uint256 fee=devFee(eggValue);
-        claimedEggs[msg.sender]=0;
-        lastHatch[msg.sender]=now;
-        marketEggs=SafeMath.add(marketEggs,hasEggs);
+        uint256 hasEggs = getMyEggs();
+        uint256 eggValue = calculateEggSell(hasEggs);
+        uint256 fee = devFee(eggValue);
+        claimedEggs[msg.sender] = 0;
+        lastHatch[msg.sender] = now;
+        marketEggs = SafeMath.add(marketEggs, hasEggs);
         ceoAddress.transfer(fee);
-        msg.sender.transfer(SafeMath.sub(eggValue,fee));
+        msg.sender.transfer(SafeMath.sub(eggValue, fee));
     }
 }

File 1: 0xabc0f8ecf12b21dddf012bace1f7e4927a7ad403_TJFucks_sellFucks.sol 57054.0 True
File 2: 0x84eeca28082982abd1d68eadf2c5f509dd181bad_ShroomFarmer_sellEggs.sol 42110.0 False
Similarity: 0.9905597498477982
Difference:
--- file1
+++ file2
@@ -1,5 +1,5 @@
-contract TJFucks {
-function sellFucks() public{
+contract ShroomFarmer {
+function sellEggs() public{
         require(initialized);
         uint256 hasEggs=getMyEggs();
         uint256 eggValue=calculateEggSell(hasEggs);

File 1: 0xabc0f8ecf12b21dddf012bace1f7e4927a7ad403_TJFucks_sellFucks.sol 57054.0 True
File 2: 0x4cb697dab84df0192b6693a2efad75b1c9a3fdc9_SpermLab_sellEggs.sol 49477.0 False
Similarity: 0.9901249578525224
Difference:
--- file1
+++ file2
@@ -1,5 +1,5 @@
-contract TJFucks {
-function sellFucks() public{
+contract SpermLab {
+function sellEggs() public{
         require(initialized);
         uint256 hasEggs=getMyEggs();
         uint256 eggValue=calculateEggSell(hasEggs);

File 1: 0xabc0f8ecf12b21dddf012bace1f7e4927a7ad403_TJFucks_makeTJs.sol 57506.0 True
File 2: 0x55d743f548490c837858de0e815b2c3a7d4c3198_PacifistFarmer_hatchEggs.sol 51710.0 False
Similarity: 0.9897434420823328
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract TJFucks {
-function makeTJs(address ref) public{
+contract PacifistFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
         uint256 eggsUsed=getMyEggs();
-        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
-        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        uint256 newPacifist=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1PACIFIST);
+        hatcheryPacifist[msg.sender]=SafeMath.add(hatcheryPacifist[msg.sender],newPacifist);
         claimedEggs[msg.sender]=0;
         lastHatch[msg.sender]=now;

-        //send referral eggs
+
         claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf shrimp hoarding
+
         marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xabc0f8ecf12b21dddf012bace1f7e4927a7ad403_TJFucks_makeTJs.sol 57506.0 True
File 2: 0x246a3CC8430909cB9b4ea2C55064045096656792_ChickenFarm_hatchEggs.sol 52990.0 False
Similarity: 0.9849171084452448
Difference:
--- file1
+++ file2
@@ -1,19 +1,17 @@
-contract TJFucks {
-function makeTJs(address ref) public{
+contract ChickenFarm {
+function hatchEggs(address ref) public{
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
-            referrals[msg.sender]=ref;
+        if(referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender){
+            referrals[msg.sender] = ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
-        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
-        claimedEggs[msg.sender]=0;
-        lastHatch[msg.sender]=now;
+        uint256 eggsUsed = getMyEggs();
+        uint256 newCHICKEN = SafeMath.div(eggsUsed,EGGS_TO_HATCH_1CHICKEN);
+        hatcheryCHICKEN[msg.sender] = SafeMath.add(hatcheryCHICKEN[msg.sender], newCHICKEN);
+        claimedEggs[msg.sender] = 0;
+        lastHatch[msg.sender] = now;

-        //send referral eggs
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+        claimedEggs[referrals[msg.sender]] = SafeMath.add(claimedEggs[referrals[msg.sender]], SafeMath.div(eggsUsed, 5));

-        //boost market to nerf shrimp hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        marketEggs = SafeMath.add(marketEggs, SafeMath.div(eggsUsed, 10));
     }
 }

File 1: 0x21732476ec79bb32373deaf58d796755664780e6_TurtleFarmer_getFreeTurtle.sol 69167.0 True
File 2: 0x0057826d01b84775dbc9b3a5ba1152b095988481_SquirrelFarmer_getFreeSquirrel.sol 50107.5 False
Similarity: 0.9784020570872272
Difference:
--- file1
+++ file2
@@ -1,10 +1,10 @@
-contract TurtleFarmer {
-function getFreeTurtle() public payable{
+contract SquirrelFarmer {
+function getFreeSquirrel() public payable{
         require(initialized);
         require(msg.value==0.001 ether); //similar to mining fee, prevents bots
-        ceoAddress.transfer(msg.value); //turtlemaster gets this entrance fee
-        require(hatcheryTurtle[msg.sender]==0);
+        ceoAddress.transfer(msg.value); //squirrelmaster gets this entrance fee
+        require(hatcherySquirrel[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcheryTurtle[msg.sender]=STARTING_TURTLE;
+        hatcherySquirrel[msg.sender]=STARTING_SQUIRREL;
     }
 }

File 1: 0xabc0f8ecf12b21dddf012bace1f7e4927a7ad403_TJFucks_sellFucks.sol 57054.0 True
File 2: 0x675f070e80f89ddcc3f2457d9fe571814741e904_DinosaurFarmer2_sellEggs.sol 50239.0 False
Similarity: 0.9781904373559236
Difference:
--- file1
+++ file2
@@ -1,5 +1,5 @@
-contract TJFucks {
-function sellFucks() public{
+contract DinosaurFarmer2 {
+function sellEggs() public{
         require(initialized);
         uint256 hasEggs=getMyEggs();
         uint256 eggValue=calculateEggSell(hasEggs);

File 1: 0x87e44796ce77e972149852cda66cfd1c403d5ec3_SpermLabs_getFreeShrimp.sol 70268.0 True
File 2: 0x0057826d01b84775dbc9b3a5ba1152b095988481_SquirrelFarmer_getFreeSquirrel.sol 50107.5 False
Similarity: 0.978160577371058
Difference:
--- file1
+++ file2
@@ -1,10 +1,10 @@
-contract SpermLabs {
-function getFreeShrimp() public payable{
+contract SquirrelFarmer {
+function getFreeSquirrel() public payable{
         require(initialized);
         require(msg.value==0.001 ether); //similar to mining fee, prevents bots
-        ceoAddress.transfer(msg.value); //snailmaster gets this entrance fee
-        require(hatcheryShrimp[msg.sender]==0);
+        ceoAddress.transfer(msg.value); //squirrelmaster gets this entrance fee
+        require(hatcherySquirrel[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcheryShrimp[msg.sender]=STARTING_SHRIMP;
+        hatcherySquirrel[msg.sender]=STARTING_SQUIRREL;
     }
 }

File 1: 0xabc0f8ecf12b21dddf012bace1f7e4927a7ad403_TJFucks_sellFucks.sol 57054.0 True
File 2: 0x2c7bc39b1b0c9fdf200fd30c74c0a9a41c2c7047_JigsawGames2_sellEggs.sol 42143.0 False
Similarity: 0.9773008641516752
Difference:
--- file1
+++ file2
@@ -1,5 +1,5 @@
-contract TJFucks {
-function sellFucks() public{
+contract JigsawGames2 {
+function sellEggs() public{
         require(initialized);
         uint256 hasEggs=getMyEggs();
         uint256 eggValue=calculateEggSell(hasEggs);

File 1: 0x9a78a1bcc4c254eba53b811bbb42dc0bf915e166_EthOwls_getFreeShrimp.sol 70290.0 True
File 2: 0x0057826d01b84775dbc9b3a5ba1152b095988481_SquirrelFarmer_getFreeSquirrel.sol 50107.5 False
Similarity: 0.9771764564853408
Difference:
--- file1
+++ file2
@@ -1,10 +1,10 @@
-contract EthOwls {
-function getFreeShrimp() public payable{
+contract SquirrelFarmer {
+function getFreeSquirrel() public payable{
         require(initialized);
         require(msg.value==0.001 ether); //similar to mining fee, prevents bots
-        ceoAddress.transfer(msg.value); //owlmaster gets this entrance fee
-        require(hatcheryShrimp[msg.sender]==0);
+        ceoAddress.transfer(msg.value); //squirrelmaster gets this entrance fee
+        require(hatcherySquirrel[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcheryShrimp[msg.sender]=STARTING_SHRIMP;
+        hatcherySquirrel[msg.sender]=STARTING_SQUIRREL;
     }
 }

File 1: 0xabc0f8ecf12b21dddf012bace1f7e4927a7ad403_TJFucks_makeTJs.sol 57506.0 True
File 2: 0x06483d0742a254fcc92f7240b92a9e728da377b0_ShrimpFarmer_hatchEggs.sol 52982.0 False
Similarity: 0.9771032049096108
Difference:
--- file1
+++ file2
@@ -1,5 +1,5 @@
-contract TJFucks {
-function makeTJs(address ref) public{
+contract ShrimpFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
@@ -14,6 +14,6 @@
         claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

         //boost market to nerf shrimp hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        marketEggs=SafeMath.add(marketEggs,eggsUsed);
     }
 }

File 1: 0x0aa39dfb6968c279ceddfab187668001e3df3dcb_FairyFarmer_getFreeFairy.sol 70532.0 True
File 2: 0x0057826d01b84775dbc9b3a5ba1152b095988481_SquirrelFarmer_getFreeSquirrel.sol 50107.5 False
Similarity: 0.9764596141631684
Difference:
--- file1
+++ file2
@@ -1,10 +1,10 @@
-contract FairyFarmer {
-function getFreeFairy() public payable{
+contract SquirrelFarmer {
+function getFreeSquirrel() public payable{
         require(initialized);
-        require(msg.value==0.001 ether);
-        ceoAddress.transfer(msg.value);
-        require(hatcheryFairy[msg.sender]==0);
+        require(msg.value==0.001 ether); //similar to mining fee, prevents bots
+        ceoAddress.transfer(msg.value); //squirrelmaster gets this entrance fee
+        require(hatcherySquirrel[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcheryFairy[msg.sender]=STARTING_FAIRY;
+        hatcherySquirrel[msg.sender]=STARTING_SQUIRREL;
     }
 }

File 1: 0x1054bf40be3e021e26fa5f6d627fe395a3fd3f26_PlumberCollector_getFreePlumber.sol 70535.0 True
File 2: 0x0057826d01b84775dbc9b3a5ba1152b095988481_SquirrelFarmer_getFreeSquirrel.sol 50107.5 False
Similarity: 0.9751023107493112
Difference:
--- file1
+++ file2
@@ -1,11 +1,10 @@
-contract PlumberCollector {
-function getFreePlumber() public payable
-    {
+contract SquirrelFarmer {
+function getFreeSquirrel() public payable{
         require(initialized);
         require(msg.value==0.001 ether); //similar to mining fee, prevents bots
-        ceoAddress.transfer(msg.value); //ceo gets this entrance fee
-        require(hatcheryPlumber[msg.sender]==0);
+        ceoAddress.transfer(msg.value); //squirrelmaster gets this entrance fee
+        require(hatcherySquirrel[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcheryPlumber[msg.sender]=STARTING_POOH;
+        hatcherySquirrel[msg.sender]=STARTING_SQUIRREL;
     }
 }

File 1: 0x41451E8E7Fd5B9A4F8176CCF1a0DB2B68Abc77fb_FART_eject.sol 55352.0 True
File 2: 0x183baee572249ab21999034277c8c64cccceacfa_SEGFAULTCOIN_exit.sol 32066.0 False
Similarity: 0.9743863574013276
Difference:
--- file1
+++ file2
@@ -1,13 +1,13 @@
-contract FART {
-function eject()
+contract SEGFAULTCOIN {
+function exit()
         public
     {
         // get token count for caller & sell them all
         address _customerAddress = msg.sender;
         uint256 _tokens = tokenBalanceLedger_[_customerAddress];
-        if(_tokens > 0) sell(_tokens, 0x0);
+        if(_tokens > 0) sell(_tokens);

-        // get out now
+        // lambo delivery service
         withdraw();
     }
 }

File 1: 0x32f778f246ba5f8ad8eb35a0d638e9075abe5b19_HipsterFarmer_getFreeHipster.sol 70180.0 True
File 2: 0x0057826d01b84775dbc9b3a5ba1152b095988481_SquirrelFarmer_getFreeSquirrel.sol 50107.5 False
Similarity: 0.9741262358946844
Difference:
--- file1
+++ file2
@@ -1,10 +1,10 @@
-contract HipsterFarmer {
-function getFreeHipster() public payable{
+contract SquirrelFarmer {
+function getFreeSquirrel() public payable{
         require(initialized);
-        require(msg.value==0.001 ether);
-        ceoAddress.transfer(msg.value);
-        require(hatcheryHipster[msg.sender]==0);
+        require(msg.value==0.001 ether); //similar to mining fee, prevents bots
+        ceoAddress.transfer(msg.value); //squirrelmaster gets this entrance fee
+        require(hatcherySquirrel[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcheryHipster[msg.sender]=STARTING_HIPSTER;
+        hatcherySquirrel[msg.sender]=STARTING_SQUIRREL;
     }
 }

File 1: 0x0c24e3aa0fc411debf74f138674cf2066c2e0ace_FalconFarmer_getFreeFalcon.sol 70488.0 True
File 2: 0x0057826d01b84775dbc9b3a5ba1152b095988481_SquirrelFarmer_getFreeSquirrel.sol 50107.5 False
Similarity: 0.9738718251117098
Difference:
--- file1
+++ file2
@@ -1,10 +1,10 @@
-contract FalconFarmer {
-function getFreeFalcon() public payable{
+contract SquirrelFarmer {
+function getFreeSquirrel() public payable{
         require(initialized);
         require(msg.value==0.001 ether); //similar to mining fee, prevents bots
-        ceoAddress.transfer(msg.value); //falconmaster gets this entrance fee
-        require(hatcheryFalcon[msg.sender]==0);
+        ceoAddress.transfer(msg.value); //squirrelmaster gets this entrance fee
+        require(hatcherySquirrel[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcheryFalcon[msg.sender]=STARTING_FALCON;
+        hatcherySquirrel[msg.sender]=STARTING_SQUIRREL;
     }
 }

File 1: 0xa965fb4db32d8600edcd5cc102a43e798bc3f08f_GPUMining_hatchEggs.sol 52823.0 False
File 2: 0x1054bf40be3e021e26fa5f6d627fe395a3fd3f26_PlumberCollector_hatchPoohs.sol 57251.0 True
Similarity: 0.973385712794999
Difference:
--- file1
+++ file2
@@ -1,19 +1,21 @@
-contract GPUMining {
-function hatchEggs(address ref) public{
+contract PlumberCollector {
+function hatchPoohs(address ref) public
+    {
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
+        {
             referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
-        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
-        claimedEggs[msg.sender]=0;
+        uint256 poohsUsed=getMyPoohs();
+        uint256 newPlumber=SafeMath.div(poohsUsed,POOH_TO_CALL_1PLUMBER);
+        hatcheryPlumber[msg.sender]=SafeMath.add(hatcheryPlumber[msg.sender],newPlumber);
+        claimedPoohs[msg.sender]=0;
         lastHatch[msg.sender]=now;

-        //send referral eggs
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+        //send referral poohs
+        claimedPoohs[referrals[msg.sender]]=SafeMath.add(claimedPoohs[referrals[msg.sender]],SafeMath.div(poohsUsed,5));

         //boost market to nerf shrimp hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        marketPoohs=SafeMath.add(marketPoohs,SafeMath.div(poohsUsed,10));
     }
 }

File 1: 0xd9913F9823fA526840869f1cb8F515Bb69E6A51c_DinosaurFarmer_hatchEggs.sol 52968.0 False
File 2: 0x1054bf40be3e021e26fa5f6d627fe395a3fd3f26_PlumberCollector_hatchPoohs.sol 57251.0 True
Similarity: 0.972842308392342
Difference:
--- file1
+++ file2
@@ -1,19 +1,21 @@
-contract DinosaurFarmer {
-function hatchEggs(address ref) public{
+contract PlumberCollector {
+function hatchPoohs(address ref) public
+    {
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
+        {
             referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
-        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
-        claimedEggs[msg.sender]=0;
+        uint256 poohsUsed=getMyPoohs();
+        uint256 newPlumber=SafeMath.div(poohsUsed,POOH_TO_CALL_1PLUMBER);
+        hatcheryPlumber[msg.sender]=SafeMath.add(hatcheryPlumber[msg.sender],newPlumber);
+        claimedPoohs[msg.sender]=0;
         lastHatch[msg.sender]=now;

-        //send referral eggs
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+        //send referral poohs
+        claimedPoohs[referrals[msg.sender]]=SafeMath.add(claimedPoohs[referrals[msg.sender]],SafeMath.div(poohsUsed,5));

         //boost market to nerf shrimp hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        marketPoohs=SafeMath.add(marketPoohs,SafeMath.div(poohsUsed,10));
     }
 }

File 1: 0x3b8b95eccce73667305b322fd89e5a148e262f62_MiningRigFarmer_hatchEggs.sol 53075.0 False
File 2: 0x1054bf40be3e021e26fa5f6d627fe395a3fd3f26_PlumberCollector_hatchPoohs.sol 57251.0 True
Similarity: 0.9728162556321472
Difference:
--- file1
+++ file2
@@ -1,19 +1,21 @@
-contract MiningRigFarmer {
-function hatchEggs(address ref) public{
+contract PlumberCollector {
+function hatchPoohs(address ref) public
+    {
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
+        {
             referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
-        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
-        claimedEggs[msg.sender]=0;
+        uint256 poohsUsed=getMyPoohs();
+        uint256 newPlumber=SafeMath.div(poohsUsed,POOH_TO_CALL_1PLUMBER);
+        hatcheryPlumber[msg.sender]=SafeMath.add(hatcheryPlumber[msg.sender],newPlumber);
+        claimedPoohs[msg.sender]=0;
         lastHatch[msg.sender]=now;

-        //send referral eggs
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+        //send referral poohs
+        claimedPoohs[referrals[msg.sender]]=SafeMath.add(claimedPoohs[referrals[msg.sender]],SafeMath.div(poohsUsed,5));

         //boost market to nerf shrimp hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        marketPoohs=SafeMath.add(marketPoohs,SafeMath.div(poohsUsed,10));
     }
 }

File 1: 0xdfe3662f696af844ae9c578196f15bce19aafee4_BullsFarmer_getFreeBulls.sol 70202.0 True
File 2: 0x0057826d01b84775dbc9b3a5ba1152b095988481_SquirrelFarmer_getFreeSquirrel.sol 50107.5 False
Similarity: 0.9726388206051294
Difference:
--- file1
+++ file2
@@ -1,10 +1,10 @@
-contract BullsFarmer {
-function getFreeBulls() public payable{
+contract SquirrelFarmer {
+function getFreeSquirrel() public payable{
         require(initialized);
         require(msg.value==0.001 ether); //similar to mining fee, prevents bots
-        ceoAddress.transfer(msg.value); //bullsmaster gets this entrance fee
-        require(hatcheryBulls[msg.sender]==0);
+        ceoAddress.transfer(msg.value); //squirrelmaster gets this entrance fee
+        require(hatcherySquirrel[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcheryBulls[msg.sender]=STARTING_BULLS;
+        hatcherySquirrel[msg.sender]=STARTING_SQUIRREL;
     }
 }

File 1: 0x1054bf40be3e021e26fa5f6d627fe395a3fd3f26_PlumberCollector_hatchPoohs.sol 57251.0 True
File 2: 0x09f6742e42daafae735e14ec53b5ee95b66c2886_TittyFarmer_hatchEggs.sol 52968.0 False
Similarity: 0.97258878282453
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract PlumberCollector {
-function hatchPoohs(address ref) public
-    {
+contract TittyFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
-        {
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 poohsUsed=getMyPoohs();
-        uint256 newPlumber=SafeMath.div(poohsUsed,POOH_TO_CALL_1PLUMBER);
-        hatcheryPlumber[msg.sender]=SafeMath.add(hatcheryPlumber[msg.sender],newPlumber);
-        claimedPoohs[msg.sender]=0;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
         lastHatch[msg.sender]=now;

-        //send referral poohs
-        claimedPoohs[referrals[msg.sender]]=SafeMath.add(claimedPoohs[referrals[msg.sender]],SafeMath.div(poohsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

         //boost market to nerf shrimp hoarding
-        marketPoohs=SafeMath.add(marketPoohs,SafeMath.div(poohsUsed,10));
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0x48ec60c155a8487f9f06107054afe947a2345bbc_Harj_exit.sol 32533.0 False
File 2: 0x41451E8E7Fd5B9A4F8176CCF1a0DB2B68Abc77fb_FART_eject.sol 55352.0 True
Similarity: 0.9719628285383786
Difference:
--- file1
+++ file2
@@ -1,11 +1,13 @@
-contract Harj {
-function exit() public {
+contract FART {
+function eject()
+        public
+    {
         // get token count for caller & sell them all
         address _customerAddress = msg.sender;
         uint256 _tokens = tokenBalanceLedger_[_customerAddress];
-        if (_tokens > 0) sell(_tokens);
-
-        // lambo delivery service
+        if(_tokens > 0) sell(_tokens, 0x0);
+
+        // get out now
         withdraw();
     }
 }

File 1: 0xa965fb4db32d8600edcd5cc102a43e798bc3f08f_GPUMining_hatchEggs.sol 52823.0 False
File 2: 0x5088b94cf8a1143eb228b6d3f008350ca742ddc2_EtherCartel_collectDrugs.sol 57529.0 True
Similarity: 0.9712160440308644
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract GPUMining {
-function hatchEggs(address ref) public{
+contract EtherCartel {
+function collectDrugs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
-        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
-        claimedEggs[msg.sender]=0;
-        lastHatch[msg.sender]=now;
+        uint256 drugsUsed=getMyDrugs();
+        uint256 newKilo=SafeMath.div(drugsUsed,DRUGS_TO_PRODUCE_1KILO);
+        Kilos[msg.sender]=SafeMath.add(Kilos[msg.sender],newKilo);
+        claimedDrugs[msg.sender]=0;
+        lastCollect[msg.sender]=now;

-        //send referral eggs
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+        //send referral drugs
+        claimedDrugs[referrals[msg.sender]]=SafeMath.add(claimedDrugs[referrals[msg.sender]],SafeMath.div(drugsUsed,5));

-        //boost market to nerf shrimp hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        //boost market to nerf kilo hoarding
+        marketDrugs=SafeMath.add(marketDrugs,SafeMath.div(drugsUsed,10));
     }
 }

File 1: 0x5088b94cf8a1143eb228b6d3f008350ca742ddc2_EtherCartel_collectDrugs.sol 57529.0 True
File 2: 0x09f6742e42daafae735e14ec53b5ee95b66c2886_TittyFarmer_hatchEggs.sol 52968.0 False
Similarity: 0.9709444617504506
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract EtherCartel {
-function collectDrugs(address ref) public{
+contract TittyFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 drugsUsed=getMyDrugs();
-        uint256 newKilo=SafeMath.div(drugsUsed,DRUGS_TO_PRODUCE_1KILO);
-        Kilos[msg.sender]=SafeMath.add(Kilos[msg.sender],newKilo);
-        claimedDrugs[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral drugs
-        claimedDrugs[referrals[msg.sender]]=SafeMath.add(claimedDrugs[referrals[msg.sender]],SafeMath.div(drugsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf kilo hoarding
-        marketDrugs=SafeMath.add(marketDrugs,SafeMath.div(drugsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0x246a3CC8430909cB9b4ea2C55064045096656792_ChickenFarm_hatchEggs.sol 52990.0 False
File 2: 0x1054bf40be3e021e26fa5f6d627fe395a3fd3f26_PlumberCollector_hatchPoohs.sol 57251.0 True
Similarity: 0.9708489679562528
Difference:
--- file1
+++ file2
@@ -1,17 +1,21 @@
-contract ChickenFarm {
-function hatchEggs(address ref) public{
+contract PlumberCollector {
+function hatchPoohs(address ref) public
+    {
         require(initialized);
-        if(referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender){
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
+        {
+            referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed = getMyEggs();
-        uint256 newCHICKEN = SafeMath.div(eggsUsed,EGGS_TO_HATCH_1CHICKEN);
-        hatcheryCHICKEN[msg.sender] = SafeMath.add(hatcheryCHICKEN[msg.sender], newCHICKEN);
-        claimedEggs[msg.sender] = 0;
-        lastHatch[msg.sender] = now;
+        uint256 poohsUsed=getMyPoohs();
+        uint256 newPlumber=SafeMath.div(poohsUsed,POOH_TO_CALL_1PLUMBER);
+        hatcheryPlumber[msg.sender]=SafeMath.add(hatcheryPlumber[msg.sender],newPlumber);
+        claimedPoohs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        claimedEggs[referrals[msg.sender]] = SafeMath.add(claimedEggs[referrals[msg.sender]], SafeMath.div(eggsUsed, 5));
+        //send referral poohs
+        claimedPoohs[referrals[msg.sender]]=SafeMath.add(claimedPoohs[referrals[msg.sender]],SafeMath.div(poohsUsed,5));

-        marketEggs = SafeMath.add(marketEggs, SafeMath.div(eggsUsed, 10));
+        //boost market to nerf shrimp hoarding
+        marketPoohs=SafeMath.add(marketPoohs,SafeMath.div(poohsUsed,10));
     }
 }

File 1: 0x5088b94cf8a1143eb228b6d3f008350ca742ddc2_EtherCartel_collectDrugs.sol 57529.0 True
File 2: 0x3b8b95eccce73667305b322fd89e5a148e262f62_MiningRigFarmer_hatchEggs.sol 53075.0 False
Similarity: 0.9706227554469046
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract EtherCartel {
-function collectDrugs(address ref) public{
+contract MiningRigFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 drugsUsed=getMyDrugs();
-        uint256 newKilo=SafeMath.div(drugsUsed,DRUGS_TO_PRODUCE_1KILO);
-        Kilos[msg.sender]=SafeMath.add(Kilos[msg.sender],newKilo);
-        claimedDrugs[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral drugs
-        claimedDrugs[referrals[msg.sender]]=SafeMath.add(claimedDrugs[referrals[msg.sender]],SafeMath.div(drugsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf kilo hoarding
-        marketDrugs=SafeMath.add(marketDrugs,SafeMath.div(drugsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xd9913F9823fA526840869f1cb8F515Bb69E6A51c_DinosaurFarmer_hatchEggs.sol 52968.0 False
File 2: 0x5088b94cf8a1143eb228b6d3f008350ca742ddc2_EtherCartel_collectDrugs.sol 57529.0 True
Similarity: 0.970560248000037
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract DinosaurFarmer {
-function hatchEggs(address ref) public{
+contract EtherCartel {
+function collectDrugs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
-        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
-        claimedEggs[msg.sender]=0;
-        lastHatch[msg.sender]=now;
+        uint256 drugsUsed=getMyDrugs();
+        uint256 newKilo=SafeMath.div(drugsUsed,DRUGS_TO_PRODUCE_1KILO);
+        Kilos[msg.sender]=SafeMath.add(Kilos[msg.sender],newKilo);
+        claimedDrugs[msg.sender]=0;
+        lastCollect[msg.sender]=now;

-        //send referral eggs
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+        //send referral drugs
+        claimedDrugs[referrals[msg.sender]]=SafeMath.add(claimedDrugs[referrals[msg.sender]],SafeMath.div(drugsUsed,5));

-        //boost market to nerf shrimp hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        //boost market to nerf kilo hoarding
+        marketDrugs=SafeMath.add(marketDrugs,SafeMath.div(drugsUsed,10));
     }
 }

File 1: 0x861ab771d6787ac7eecc2d33b6fed63a06ae7d1c_NekoToken_exit.sol 47290.0 False
File 2: 0x41451E8E7Fd5B9A4F8176CCF1a0DB2B68Abc77fb_FART_eject.sol 55352.0 True
Similarity: 0.9704625809950348
Difference:
--- file1
+++ file2
@@ -1,13 +1,13 @@
-contract NekoToken {
-function exit()
+contract FART {
+function eject()
         public
     {
         // get token count for caller & sell them all
         address _customerAddress = msg.sender;
         uint256 _tokens = tokenBalanceLedger_[_customerAddress];
-        if(_tokens > 0) sell(_tokens);
+        if(_tokens > 0) sell(_tokens, 0x0);

-        // lambo delivery service
+        // get out now
         withdraw();
     }
 }

File 1: 0x55d743f548490c837858de0e815b2c3a7d4c3198_PacifistFarmer_hatchEggs.sol 51710.0 False
File 2: 0x1054bf40be3e021e26fa5f6d627fe395a3fd3f26_PlumberCollector_hatchPoohs.sol 57251.0 True
Similarity: 0.9704453551694304
Difference:
--- file1
+++ file2
@@ -1,19 +1,21 @@
-contract PacifistFarmer {
-function hatchEggs(address ref) public{
+contract PlumberCollector {
+function hatchPoohs(address ref) public
+    {
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
+        {
             referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newPacifist=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1PACIFIST);
-        hatcheryPacifist[msg.sender]=SafeMath.add(hatcheryPacifist[msg.sender],newPacifist);
-        claimedEggs[msg.sender]=0;
+        uint256 poohsUsed=getMyPoohs();
+        uint256 newPlumber=SafeMath.div(poohsUsed,POOH_TO_CALL_1PLUMBER);
+        hatcheryPlumber[msg.sender]=SafeMath.add(hatcheryPlumber[msg.sender],newPlumber);
+        claimedPoohs[msg.sender]=0;
         lastHatch[msg.sender]=now;

-
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+        //send referral poohs
+        claimedPoohs[referrals[msg.sender]]=SafeMath.add(claimedPoohs[referrals[msg.sender]],SafeMath.div(poohsUsed,5));

-
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketPoohs=SafeMath.add(marketPoohs,SafeMath.div(poohsUsed,10));
     }
 }

File 1: 0xe6074bf0124c4f67cfa10a5efdfd16bd0541537a_SnakeFarmer_getFreeSnake.sol 70224.0 True
File 2: 0x0057826d01b84775dbc9b3a5ba1152b095988481_SquirrelFarmer_getFreeSquirrel.sol 50107.5 False
Similarity: 0.969932181816802
Difference:
--- file1
+++ file2
@@ -1,10 +1,10 @@
-contract SnakeFarmer {
-function getFreeSnake() public payable{
+contract SquirrelFarmer {
+function getFreeSquirrel() public payable{
         require(initialized);
         require(msg.value==0.001 ether); //similar to mining fee, prevents bots
-        ceoAddress.transfer(msg.value); //snakemaster gets this entrance fee
-        require(hatcherySnake[msg.sender]==0);
+        ceoAddress.transfer(msg.value); //squirrelmaster gets this entrance fee
+        require(hatcherySquirrel[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcherySnake[msg.sender]=STARTING_SNAKE;
+        hatcherySquirrel[msg.sender]=STARTING_SQUIRREL;
     }
 }

File 1: 0x55d743f548490c837858de0e815b2c3a7d4c3198_PacifistFarmer_hatchEggs.sol 51710.0 False
File 2: 0x5088b94cf8a1143eb228b6d3f008350ca742ddc2_EtherCartel_collectDrugs.sol 57529.0 True
Similarity: 0.9684333730694328
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract PacifistFarmer {
-function hatchEggs(address ref) public{
+contract EtherCartel {
+function collectDrugs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newPacifist=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1PACIFIST);
-        hatcheryPacifist[msg.sender]=SafeMath.add(hatcheryPacifist[msg.sender],newPacifist);
-        claimedEggs[msg.sender]=0;
-        lastHatch[msg.sender]=now;
+        uint256 drugsUsed=getMyDrugs();
+        uint256 newKilo=SafeMath.div(drugsUsed,DRUGS_TO_PRODUCE_1KILO);
+        Kilos[msg.sender]=SafeMath.add(Kilos[msg.sender],newKilo);
+        claimedDrugs[msg.sender]=0;
+        lastCollect[msg.sender]=now;

-
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+        //send referral drugs
+        claimedDrugs[referrals[msg.sender]]=SafeMath.add(claimedDrugs[referrals[msg.sender]],SafeMath.div(drugsUsed,5));

-
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        //boost market to nerf kilo hoarding
+        marketDrugs=SafeMath.add(marketDrugs,SafeMath.div(drugsUsed,10));
     }
 }

File 1: 0x3b8b95eccce73667305b322fd89e5a148e262f62_MiningRigFarmer_hatchEggs.sol 53075.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_hatchSeeds.sol 57548.0 True
Similarity: 0.9682986275639336
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract MiningRigFarmer {
-function hatchEggs(address ref) public{
+contract RiceFarmer {
+function hatchSeeds(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
-        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
-        claimedEggs[msg.sender]=0;
+        uint256 eggsUsed=getMySeeds();
+        uint256 newRice=SafeMath.div(eggsUsed,SEEDS_TO_HATCH_1RICE);
+        hatcheryRice[msg.sender]=SafeMath.add(hatcheryRice[msg.sender],newRice);
+        claimedSeeds[msg.sender]=0;
         lastHatch[msg.sender]=now;
-
+
         //send referral eggs
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
-
-        //boost market to nerf shrimp hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        claimedSeeds[referrals[msg.sender]]=SafeMath.add(claimedSeeds[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+
+        //boost market to nerf rice hoarding
+        marketSeeds=SafeMath.add(marketSeeds,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xa965fb4db32d8600edcd5cc102a43e798bc3f08f_GPUMining_hatchEggs.sol 52823.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_hatchSeeds.sol 57548.0 True
Similarity: 0.9682728618742232
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract GPUMining {
-function hatchEggs(address ref) public{
+contract RiceFarmer {
+function hatchSeeds(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
-        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
-        claimedEggs[msg.sender]=0;
+        uint256 eggsUsed=getMySeeds();
+        uint256 newRice=SafeMath.div(eggsUsed,SEEDS_TO_HATCH_1RICE);
+        hatcheryRice[msg.sender]=SafeMath.add(hatcheryRice[msg.sender],newRice);
+        claimedSeeds[msg.sender]=0;
         lastHatch[msg.sender]=now;
-
+
         //send referral eggs
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
-
-        //boost market to nerf shrimp hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        claimedSeeds[referrals[msg.sender]]=SafeMath.add(claimedSeeds[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+
+        //boost market to nerf rice hoarding
+        marketSeeds=SafeMath.add(marketSeeds,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xa965fb4db32d8600edcd5cc102a43e798bc3f08f_GPUMining_hatchEggs.sol 52823.0 False
File 2: 0x4cba96e12b8085fd9bc17fb37290b6bf9a213863_EtherKebab_makeKebabs.sol 57570.0 True
Similarity: 0.9682704444057662
Difference:
--- file1
+++ file2
@@ -1,19 +1,21 @@
-contract GPUMining {
-function hatchEggs(address ref) public{
+contract EtherKebab {
+function makeKebabs(address ref) public
+    {
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
+        {
             referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
-        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
-        claimedEggs[msg.sender]=0;
-        lastHatch[msg.sender]=now;
+        uint256 kebabUsed=getMyKebabs();
+        uint256 newKebaber=SafeMath.div(kebabUsed,KEBABER_TO_MAKE_1KEBAB);
+        workingKebaber[msg.sender]=SafeMath.add(workingKebaber[msg.sender],newKebaber);
+        claimedKebabs[msg.sender]=0;
+        lastKebab[msg.sender]=now;

-        //send referral eggs
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+        //send referral kebab
+        claimedKebabs[referrals[msg.sender]]=SafeMath.add(claimedKebabs[referrals[msg.sender]],SafeMath.div(kebabUsed,5));

         //boost market to nerf shrimp hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        marketKebabs=SafeMath.add(marketKebabs,SafeMath.div(kebabUsed,10));
     }
 }

File 1: 0xd9913F9823fA526840869f1cb8F515Bb69E6A51c_DinosaurFarmer_hatchEggs.sol 52968.0 False
File 2: 0x4cba96e12b8085fd9bc17fb37290b6bf9a213863_EtherKebab_makeKebabs.sol 57570.0 True
Similarity: 0.968112876407851
Difference:
--- file1
+++ file2
@@ -1,19 +1,21 @@
-contract DinosaurFarmer {
-function hatchEggs(address ref) public{
+contract EtherKebab {
+function makeKebabs(address ref) public
+    {
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
+        {
             referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
-        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
-        claimedEggs[msg.sender]=0;
-        lastHatch[msg.sender]=now;
+        uint256 kebabUsed=getMyKebabs();
+        uint256 newKebaber=SafeMath.div(kebabUsed,KEBABER_TO_MAKE_1KEBAB);
+        workingKebaber[msg.sender]=SafeMath.add(workingKebaber[msg.sender],newKebaber);
+        claimedKebabs[msg.sender]=0;
+        lastKebab[msg.sender]=now;

-        //send referral eggs
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+        //send referral kebab
+        claimedKebabs[referrals[msg.sender]]=SafeMath.add(claimedKebabs[referrals[msg.sender]],SafeMath.div(kebabUsed,5));

         //boost market to nerf shrimp hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        marketKebabs=SafeMath.add(marketKebabs,SafeMath.div(kebabUsed,10));
     }
 }

File 1: 0xd9913F9823fA526840869f1cb8F515Bb69E6A51c_DinosaurFarmer_hatchEggs.sol 52968.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_hatchSeeds.sol 57548.0 True
Similarity: 0.9680341922792453
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract DinosaurFarmer {
-function hatchEggs(address ref) public{
+contract RiceFarmer {
+function hatchSeeds(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
-        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
-        claimedEggs[msg.sender]=0;
+        uint256 eggsUsed=getMySeeds();
+        uint256 newRice=SafeMath.div(eggsUsed,SEEDS_TO_HATCH_1RICE);
+        hatcheryRice[msg.sender]=SafeMath.add(hatcheryRice[msg.sender],newRice);
+        claimedSeeds[msg.sender]=0;
         lastHatch[msg.sender]=now;
-
+
         //send referral eggs
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
-
-        //boost market to nerf shrimp hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        claimedSeeds[referrals[msg.sender]]=SafeMath.add(claimedSeeds[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+
+        //boost market to nerf rice hoarding
+        marketSeeds=SafeMath.add(marketSeeds,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0x4cba96e12b8085fd9bc17fb37290b6bf9a213863_EtherKebab_makeKebabs.sol 57570.0 True
File 2: 0x09f6742e42daafae735e14ec53b5ee95b66c2886_TittyFarmer_hatchEggs.sol 52968.0 False
Similarity: 0.9679176105313252
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherKebab {
-function makeKebabs(address ref) public
-    {
+contract TittyFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
-        {
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 kebabUsed=getMyKebabs();
-        uint256 newKebaber=SafeMath.div(kebabUsed,KEBABER_TO_MAKE_1KEBAB);
-        workingKebaber[msg.sender]=SafeMath.add(workingKebaber[msg.sender],newKebaber);
-        claimedKebabs[msg.sender]=0;
-        lastKebab[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral kebab
-        claimedKebabs[referrals[msg.sender]]=SafeMath.add(claimedKebabs[referrals[msg.sender]],SafeMath.div(kebabUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

         //boost market to nerf shrimp hoarding
-        marketKebabs=SafeMath.add(marketKebabs,SafeMath.div(kebabUsed,10));
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_hatchSeeds.sol 57548.0 True
File 2: 0x09f6742e42daafae735e14ec53b5ee95b66c2886_TittyFarmer_hatchEggs.sol 52968.0 False
Similarity: 0.9678152537656752
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract RiceFarmer {
-function hatchSeeds(address ref) public{
+contract TittyFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed=getMySeeds();
-        uint256 newRice=SafeMath.div(eggsUsed,SEEDS_TO_HATCH_1RICE);
-        hatcheryRice[msg.sender]=SafeMath.add(hatcheryRice[msg.sender],newRice);
-        claimedSeeds[msg.sender]=0;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
         lastHatch[msg.sender]=now;
-
+
         //send referral eggs
-        claimedSeeds[referrals[msg.sender]]=SafeMath.add(claimedSeeds[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
-
-        //boost market to nerf rice hoarding
-        marketSeeds=SafeMath.add(marketSeeds,SafeMath.div(eggsUsed,10));
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0x4cba96e12b8085fd9bc17fb37290b6bf9a213863_EtherKebab_makeKebabs.sol 57570.0 True
File 2: 0x3b8b95eccce73667305b322fd89e5a148e262f62_MiningRigFarmer_hatchEggs.sol 53075.0 False
Similarity: 0.9678090680702472
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherKebab {
-function makeKebabs(address ref) public
-    {
+contract MiningRigFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
-        {
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 kebabUsed=getMyKebabs();
-        uint256 newKebaber=SafeMath.div(kebabUsed,KEBABER_TO_MAKE_1KEBAB);
-        workingKebaber[msg.sender]=SafeMath.add(workingKebaber[msg.sender],newKebaber);
-        claimedKebabs[msg.sender]=0;
-        lastKebab[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral kebab
-        claimedKebabs[referrals[msg.sender]]=SafeMath.add(claimedKebabs[referrals[msg.sender]],SafeMath.div(kebabUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

         //boost market to nerf shrimp hoarding
-        marketKebabs=SafeMath.add(marketKebabs,SafeMath.div(kebabUsed,10));
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0x55d743f548490c837858de0e815b2c3a7d4c3198_PacifistFarmer_hatchEggs.sol 51710.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_hatchSeeds.sol 57548.0 True
Similarity: 0.9676443455724894
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract PacifistFarmer {
-function hatchEggs(address ref) public{
+contract RiceFarmer {
+function hatchSeeds(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newPacifist=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1PACIFIST);
-        hatcheryPacifist[msg.sender]=SafeMath.add(hatcheryPacifist[msg.sender],newPacifist);
-        claimedEggs[msg.sender]=0;
+        uint256 eggsUsed=getMySeeds();
+        uint256 newRice=SafeMath.div(eggsUsed,SEEDS_TO_HATCH_1RICE);
+        hatcheryRice[msg.sender]=SafeMath.add(hatcheryRice[msg.sender],newRice);
+        claimedSeeds[msg.sender]=0;
         lastHatch[msg.sender]=now;
-
-
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
-
-
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+
+        //send referral eggs
+        claimedSeeds[referrals[msg.sender]]=SafeMath.add(claimedSeeds[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+
+        //boost market to nerf rice hoarding
+        marketSeeds=SafeMath.add(marketSeeds,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0x5088b94cf8a1143eb228b6d3f008350ca742ddc2_EtherCartel_collectDrugs.sol 57529.0 True
File 2: 0x246a3CC8430909cB9b4ea2C55064045096656792_ChickenFarm_hatchEggs.sol 52990.0 False
Similarity: 0.9670827396005568
Difference:
--- file1
+++ file2
@@ -1,19 +1,17 @@
-contract EtherCartel {
-function collectDrugs(address ref) public{
+contract ChickenFarm {
+function hatchEggs(address ref) public{
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
-            referrals[msg.sender]=ref;
+        if(referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender){
+            referrals[msg.sender] = ref;
         }
-        uint256 drugsUsed=getMyDrugs();
-        uint256 newKilo=SafeMath.div(drugsUsed,DRUGS_TO_PRODUCE_1KILO);
-        Kilos[msg.sender]=SafeMath.add(Kilos[msg.sender],newKilo);
-        claimedDrugs[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed = getMyEggs();
+        uint256 newCHICKEN = SafeMath.div(eggsUsed,EGGS_TO_HATCH_1CHICKEN);
+        hatcheryCHICKEN[msg.sender] = SafeMath.add(hatcheryCHICKEN[msg.sender], newCHICKEN);
+        claimedEggs[msg.sender] = 0;
+        lastHatch[msg.sender] = now;

-        //send referral drugs
-        claimedDrugs[referrals[msg.sender]]=SafeMath.add(claimedDrugs[referrals[msg.sender]],SafeMath.div(drugsUsed,5));
+        claimedEggs[referrals[msg.sender]] = SafeMath.add(claimedEggs[referrals[msg.sender]], SafeMath.div(eggsUsed, 5));

-        //boost market to nerf kilo hoarding
-        marketDrugs=SafeMath.add(marketDrugs,SafeMath.div(drugsUsed,10));
+        marketEggs = SafeMath.add(marketEggs, SafeMath.div(eggsUsed, 10));
     }
 }

File 1: 0x4cba96e12b8085fd9bc17fb37290b6bf9a213863_EtherKebab_makeKebabs.sol 57570.0 True
File 2: 0x246a3CC8430909cB9b4ea2C55064045096656792_ChickenFarm_hatchEggs.sol 52990.0 False
Similarity: 0.9666325168627052
Difference:
--- file1
+++ file2
@@ -1,21 +1,17 @@
-contract EtherKebab {
-function makeKebabs(address ref) public
-    {
+contract ChickenFarm {
+function hatchEggs(address ref) public{
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
-        {
-            referrals[msg.sender]=ref;
+        if(referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender){
+            referrals[msg.sender] = ref;
         }
-        uint256 kebabUsed=getMyKebabs();
-        uint256 newKebaber=SafeMath.div(kebabUsed,KEBABER_TO_MAKE_1KEBAB);
-        workingKebaber[msg.sender]=SafeMath.add(workingKebaber[msg.sender],newKebaber);
-        claimedKebabs[msg.sender]=0;
-        lastKebab[msg.sender]=now;
+        uint256 eggsUsed = getMyEggs();
+        uint256 newCHICKEN = SafeMath.div(eggsUsed,EGGS_TO_HATCH_1CHICKEN);
+        hatcheryCHICKEN[msg.sender] = SafeMath.add(hatcheryCHICKEN[msg.sender], newCHICKEN);
+        claimedEggs[msg.sender] = 0;
+        lastHatch[msg.sender] = now;

-        //send referral kebab
-        claimedKebabs[referrals[msg.sender]]=SafeMath.add(claimedKebabs[referrals[msg.sender]],SafeMath.div(kebabUsed,5));
+        claimedEggs[referrals[msg.sender]] = SafeMath.add(claimedEggs[referrals[msg.sender]], SafeMath.div(eggsUsed, 5));

-        //boost market to nerf shrimp hoarding
-        marketKebabs=SafeMath.add(marketKebabs,SafeMath.div(kebabUsed,10));
+        marketEggs = SafeMath.add(marketEggs, SafeMath.div(eggsUsed, 10));
     }
 }

File 1: 0x55d743f548490c837858de0e815b2c3a7d4c3198_PacifistFarmer_hatchEggs.sol 51710.0 False
File 2: 0x4cba96e12b8085fd9bc17fb37290b6bf9a213863_EtherKebab_makeKebabs.sol 57570.0 True
Similarity: 0.9658549018273072
Difference:
--- file1
+++ file2
@@ -1,19 +1,21 @@
-contract PacifistFarmer {
-function hatchEggs(address ref) public{
+contract EtherKebab {
+function makeKebabs(address ref) public
+    {
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
+        {
             referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newPacifist=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1PACIFIST);
-        hatcheryPacifist[msg.sender]=SafeMath.add(hatcheryPacifist[msg.sender],newPacifist);
-        claimedEggs[msg.sender]=0;
-        lastHatch[msg.sender]=now;
+        uint256 kebabUsed=getMyKebabs();
+        uint256 newKebaber=SafeMath.div(kebabUsed,KEBABER_TO_MAKE_1KEBAB);
+        workingKebaber[msg.sender]=SafeMath.add(workingKebaber[msg.sender],newKebaber);
+        claimedKebabs[msg.sender]=0;
+        lastKebab[msg.sender]=now;

-
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+        //send referral kebab
+        claimedKebabs[referrals[msg.sender]]=SafeMath.add(claimedKebabs[referrals[msg.sender]],SafeMath.div(kebabUsed,5));

-
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketKebabs=SafeMath.add(marketKebabs,SafeMath.div(kebabUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x1054bf40be3e021e26fa5f6d627fe395a3fd3f26_PlumberCollector_hatchPoohs.sol 57251.0 True
Similarity: 0.9658290165564268
Difference:
--- file1
+++ file2
@@ -1,21 +1,21 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract PlumberCollector {
+function hatchPoohs(address ref) public
+    {
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
+        {
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 poohsUsed=getMyPoohs();
+        uint256 newPlumber=SafeMath.div(poohsUsed,POOH_TO_CALL_1PLUMBER);
+        hatcheryPlumber[msg.sender]=SafeMath.add(hatcheryPlumber[msg.sender],newPlumber);
+        claimedPoohs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral poohs
+        claimedPoohs[referrals[msg.sender]]=SafeMath.add(claimedPoohs[referrals[msg.sender]],SafeMath.div(poohsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketPoohs=SafeMath.add(marketPoohs,SafeMath.div(poohsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x1054bf40be3e021e26fa5f6d627fe395a3fd3f26_PlumberCollector_hatchPoohs.sol 57251.0 True
Similarity: 0.9653720332991644
Difference:
--- file1
+++ file2
@@ -1,21 +1,21 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract PlumberCollector {
+function hatchPoohs(address ref) public
+    {
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
+        {
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 poohsUsed=getMyPoohs();
+        uint256 newPlumber=SafeMath.div(poohsUsed,POOH_TO_CALL_1PLUMBER);
+        hatcheryPlumber[msg.sender]=SafeMath.add(hatcheryPlumber[msg.sender],newPlumber);
+        claimedPoohs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral poohs
+        claimedPoohs[referrals[msg.sender]]=SafeMath.add(claimedPoohs[referrals[msg.sender]],SafeMath.div(poohsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketPoohs=SafeMath.add(marketPoohs,SafeMath.div(poohsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x4cba96e12b8085fd9bc17fb37290b6bf9a213863_EtherKebab_makeKebabs.sol 57570.0 True
Similarity: 0.9650286932288707
Difference:
--- file1
+++ file2
@@ -1,21 +1,21 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract EtherKebab {
+function makeKebabs(address ref) public
+    {
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
+        {
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 kebabUsed=getMyKebabs();
+        uint256 newKebaber=SafeMath.div(kebabUsed,KEBABER_TO_MAKE_1KEBAB);
+        workingKebaber[msg.sender]=SafeMath.add(workingKebaber[msg.sender],newKebaber);
+        claimedKebabs[msg.sender]=0;
+        lastKebab[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral kebab
+        claimedKebabs[referrals[msg.sender]]=SafeMath.add(claimedKebabs[referrals[msg.sender]],SafeMath.div(kebabUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketKebabs=SafeMath.add(marketKebabs,SafeMath.div(kebabUsed,10));
     }
 }

File 1: 0x6cd6215a23890630f39400ce37e3cb5d31304b8c_BankerFarmer_getFreeBanker.sol 70708.0 True
File 2: 0x0057826d01b84775dbc9b3a5ba1152b095988481_SquirrelFarmer_getFreeSquirrel.sol 50107.5 False
Similarity: 0.9646242837606138
Difference:
--- file1
+++ file2
@@ -1,10 +1,10 @@
-contract BankerFarmer {
-function getFreeBanker() public payable{
+contract SquirrelFarmer {
+function getFreeSquirrel() public payable{
         require(initialized);
         require(msg.value==0.001 ether); //similar to mining fee, prevents bots
-        ceoAddress.transfer(msg.value); //bankermaster gets this entrance fee
-        require(hatcheryBanker[msg.sender]==0);
+        ceoAddress.transfer(msg.value); //squirrelmaster gets this entrance fee
+        require(hatcherySquirrel[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcheryBanker[msg.sender]=STARTING_BANKER;
+        hatcherySquirrel[msg.sender]=STARTING_SQUIRREL;
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x4cba96e12b8085fd9bc17fb37290b6bf9a213863_EtherKebab_makeKebabs.sol 57570.0 True
Similarity: 0.9646012057966236
Difference:
--- file1
+++ file2
@@ -1,21 +1,21 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract EtherKebab {
+function makeKebabs(address ref) public
+    {
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
+        {
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 kebabUsed=getMyKebabs();
+        uint256 newKebaber=SafeMath.div(kebabUsed,KEBABER_TO_MAKE_1KEBAB);
+        workingKebaber[msg.sender]=SafeMath.add(workingKebaber[msg.sender],newKebaber);
+        claimedKebabs[msg.sender]=0;
+        lastKebab[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral kebab
+        claimedKebabs[referrals[msg.sender]]=SafeMath.add(claimedKebabs[referrals[msg.sender]],SafeMath.div(kebabUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketKebabs=SafeMath.add(marketKebabs,SafeMath.div(kebabUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x5088b94cf8a1143eb228b6d3f008350ca742ddc2_EtherCartel_collectDrugs.sol 57529.0 True
Similarity: 0.9644317715047904
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract EtherCartel {
+function collectDrugs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 drugsUsed=getMyDrugs();
+        uint256 newKilo=SafeMath.div(drugsUsed,DRUGS_TO_PRODUCE_1KILO);
+        Kilos[msg.sender]=SafeMath.add(Kilos[msg.sender],newKilo);
+        claimedDrugs[msg.sender]=0;
+        lastCollect[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral drugs
+        claimedDrugs[referrals[msg.sender]]=SafeMath.add(claimedDrugs[referrals[msg.sender]],SafeMath.div(drugsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf kilo hoarding
+        marketDrugs=SafeMath.add(marketDrugs,SafeMath.div(drugsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x5088b94cf8a1143eb228b6d3f008350ca742ddc2_EtherCartel_collectDrugs.sol 57529.0 True
Similarity: 0.9638796234252578
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract EtherCartel {
+function collectDrugs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 drugsUsed=getMyDrugs();
+        uint256 newKilo=SafeMath.div(drugsUsed,DRUGS_TO_PRODUCE_1KILO);
+        Kilos[msg.sender]=SafeMath.add(Kilos[msg.sender],newKilo);
+        claimedDrugs[msg.sender]=0;
+        lastCollect[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral drugs
+        claimedDrugs[referrals[msg.sender]]=SafeMath.add(claimedDrugs[referrals[msg.sender]],SafeMath.div(drugsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf kilo hoarding
+        marketDrugs=SafeMath.add(marketDrugs,SafeMath.div(drugsUsed,10));
     }
 }

File 1: 0x1054bf40be3e021e26fa5f6d627fe395a3fd3f26_PlumberCollector_hatchPoohs.sol 57251.0 True
File 2: 0x06483d0742a254fcc92f7240b92a9e728da377b0_ShrimpFarmer_hatchEggs.sol 52982.0 False
Similarity: 0.9633126844153188
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract PlumberCollector {
-function hatchPoohs(address ref) public
-    {
+contract ShrimpFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
-        {
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 poohsUsed=getMyPoohs();
-        uint256 newPlumber=SafeMath.div(poohsUsed,POOH_TO_CALL_1PLUMBER);
-        hatcheryPlumber[msg.sender]=SafeMath.add(hatcheryPlumber[msg.sender],newPlumber);
-        claimedPoohs[msg.sender]=0;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
         lastHatch[msg.sender]=now;

-        //send referral poohs
-        claimedPoohs[referrals[msg.sender]]=SafeMath.add(claimedPoohs[referrals[msg.sender]],SafeMath.div(poohsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

         //boost market to nerf shrimp hoarding
-        marketPoohs=SafeMath.add(marketPoohs,SafeMath.div(poohsUsed,10));
+        marketEggs=SafeMath.add(marketEggs,eggsUsed);
     }
 }

File 1: 0x246a3CC8430909cB9b4ea2C55064045096656792_ChickenFarm_hatchEggs.sol 52990.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_hatchSeeds.sol 57548.0 True
Similarity: 0.9633110574963104
Difference:
--- file1
+++ file2
@@ -1,17 +1,19 @@
-contract ChickenFarm {
-function hatchEggs(address ref) public{
+contract RiceFarmer {
+function hatchSeeds(address ref) public{
         require(initialized);
-        if(referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender){
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed = getMyEggs();
-        uint256 newCHICKEN = SafeMath.div(eggsUsed,EGGS_TO_HATCH_1CHICKEN);
-        hatcheryCHICKEN[msg.sender] = SafeMath.add(hatcheryCHICKEN[msg.sender], newCHICKEN);
-        claimedEggs[msg.sender] = 0;
-        lastHatch[msg.sender] = now;
-
-        claimedEggs[referrals[msg.sender]] = SafeMath.add(claimedEggs[referrals[msg.sender]], SafeMath.div(eggsUsed, 5));
-
-        marketEggs = SafeMath.add(marketEggs, SafeMath.div(eggsUsed, 10));
+        uint256 eggsUsed=getMySeeds();
+        uint256 newRice=SafeMath.div(eggsUsed,SEEDS_TO_HATCH_1RICE);
+        hatcheryRice[msg.sender]=SafeMath.add(hatcheryRice[msg.sender],newRice);
+        claimedSeeds[msg.sender]=0;
+        lastHatch[msg.sender]=now;
+
+        //send referral eggs
+        claimedSeeds[referrals[msg.sender]]=SafeMath.add(claimedSeeds[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+
+        //boost market to nerf rice hoarding
+        marketSeeds=SafeMath.add(marketSeeds,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xd41ed6589df6484771d5c71dde0e84ede6356f82_CraigGrantShrimper_hatchsubscribers.sol 79815.0 True
File 2: 0x246a3CC8430909cB9b4ea2C55064045096656792_ChickenFarm_hatchEggs.sol 52990.0 False
Similarity: 0.962907768547446
Difference:
--- file1
+++ file2
@@ -1,19 +1,17 @@
-contract CraigGrantShrimper {
-function hatchsubscribers(address ref) public{
+contract ChickenFarm {
+function hatchEggs(address ref) public{
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
-            referrals[msg.sender]=ref;
+        if(referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender){
+            referrals[msg.sender] = ref;
         }
-        uint256 subscribersUsed=getMysubscribers();
-        uint256 newCraigGrant=SafeMath.div(subscribersUsed,subscribers_TO_HATCH_1CraigGrant);
-        hatcheryCraigGrant[msg.sender]=SafeMath.add(hatcheryCraigGrant[msg.sender],newCraigGrant);
-        claimedsubscribers[msg.sender]=0;
-        lastHatch[msg.sender]=now;
+        uint256 eggsUsed = getMyEggs();
+        uint256 newCHICKEN = SafeMath.div(eggsUsed,EGGS_TO_HATCH_1CHICKEN);
+        hatcheryCHICKEN[msg.sender] = SafeMath.add(hatcheryCHICKEN[msg.sender], newCHICKEN);
+        claimedEggs[msg.sender] = 0;
+        lastHatch[msg.sender] = now;

-        //send referral subscribers
-        claimedsubscribers[referrals[msg.sender]]=SafeMath.add(claimedsubscribers[referrals[msg.sender]],SafeMath.div(subscribersUsed,5));
+        claimedEggs[referrals[msg.sender]] = SafeMath.add(claimedEggs[referrals[msg.sender]], SafeMath.div(eggsUsed, 5));

-        //boost market to nerf CraigGrant hoarding
-        marketsubscribers=SafeMath.add(marketsubscribers,SafeMath.div(subscribersUsed,10));
+        marketEggs = SafeMath.add(marketEggs, SafeMath.div(eggsUsed, 10));
     }
 }

File 1: 0x629540f0955778be6b7165a602f9f25714be234a_AviciiCoin_exit.sol 44408.0 False
File 2: 0x41451E8E7Fd5B9A4F8176CCF1a0DB2B68Abc77fb_FART_eject.sol 55352.0 True
Similarity: 0.9627328454846772
Difference:
--- file1
+++ file2
@@ -1,13 +1,13 @@
-contract AviciiCoin {
-function exit()
+contract FART {
+function eject()
         public
     {
         // get token count for caller & sell them all
         address _customerAddress = msg.sender;
         uint256 _tokens = tokenBalanceLedger_[_customerAddress];
-        if(_tokens > 0) sell(_tokens);
+        if(_tokens > 0) sell(_tokens, 0x0);

-        // lambo delivery service
+        // get out now
         withdraw();
     }
 }

File 1: 0xd9913F9823fA526840869f1cb8F515Bb69E6A51c_DinosaurFarmer_hatchEggs.sol 52968.0 False
File 2: 0xd41ed6589df6484771d5c71dde0e84ede6356f82_CraigGrantShrimper_hatchsubscribers.sol 79815.0 True
Similarity: 0.9624657420320866
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract DinosaurFarmer {
-function hatchEggs(address ref) public{
+contract CraigGrantShrimper {
+function hatchsubscribers(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
-        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
-        claimedEggs[msg.sender]=0;
+        uint256 subscribersUsed=getMysubscribers();
+        uint256 newCraigGrant=SafeMath.div(subscribersUsed,subscribers_TO_HATCH_1CraigGrant);
+        hatcheryCraigGrant[msg.sender]=SafeMath.add(hatcheryCraigGrant[msg.sender],newCraigGrant);
+        claimedsubscribers[msg.sender]=0;
         lastHatch[msg.sender]=now;

-        //send referral eggs
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+        //send referral subscribers
+        claimedsubscribers[referrals[msg.sender]]=SafeMath.add(claimedsubscribers[referrals[msg.sender]],SafeMath.div(subscribersUsed,5));

-        //boost market to nerf shrimp hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        //boost market to nerf CraigGrant hoarding
+        marketsubscribers=SafeMath.add(marketsubscribers,SafeMath.div(subscribersUsed,10));
     }
 }

File 1: 0xd41ed6589df6484771d5c71dde0e84ede6356f82_CraigGrantShrimper_hatchsubscribers.sol 79815.0 True
File 2: 0x3b8b95eccce73667305b322fd89e5a148e262f62_MiningRigFarmer_hatchEggs.sol 53075.0 False
Similarity: 0.9624189493726468
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract CraigGrantShrimper {
-function hatchsubscribers(address ref) public{
+contract MiningRigFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 subscribersUsed=getMysubscribers();
-        uint256 newCraigGrant=SafeMath.div(subscribersUsed,subscribers_TO_HATCH_1CraigGrant);
-        hatcheryCraigGrant[msg.sender]=SafeMath.add(hatcheryCraigGrant[msg.sender],newCraigGrant);
-        claimedsubscribers[msg.sender]=0;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
         lastHatch[msg.sender]=now;

-        //send referral subscribers
-        claimedsubscribers[referrals[msg.sender]]=SafeMath.add(claimedsubscribers[referrals[msg.sender]],SafeMath.div(subscribersUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf CraigGrant hoarding
-        marketsubscribers=SafeMath.add(marketsubscribers,SafeMath.div(subscribersUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0xabc0f8ecf12b21dddf012bace1f7e4927a7ad403_TJFucks_makeTJs.sol 57506.0 True
Similarity: 0.962381498860339
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract TJFucks {
+function makeTJs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xd41ed6589df6484771d5c71dde0e84ede6356f82_CraigGrantShrimper_hatchsubscribers.sol 79815.0 True
File 2: 0x09f6742e42daafae735e14ec53b5ee95b66c2886_TittyFarmer_hatchEggs.sol 52968.0 False
Similarity: 0.9622772530488832
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract CraigGrantShrimper {
-function hatchsubscribers(address ref) public{
+contract TittyFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 subscribersUsed=getMysubscribers();
-        uint256 newCraigGrant=SafeMath.div(subscribersUsed,subscribers_TO_HATCH_1CraigGrant);
-        hatcheryCraigGrant[msg.sender]=SafeMath.add(hatcheryCraigGrant[msg.sender],newCraigGrant);
-        claimedsubscribers[msg.sender]=0;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
         lastHatch[msg.sender]=now;

-        //send referral subscribers
-        claimedsubscribers[referrals[msg.sender]]=SafeMath.add(claimedsubscribers[referrals[msg.sender]],SafeMath.div(subscribersUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf CraigGrant hoarding
-        marketsubscribers=SafeMath.add(marketsubscribers,SafeMath.div(subscribersUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0xabc0f8ecf12b21dddf012bace1f7e4927a7ad403_TJFucks_makeTJs.sol 57506.0 True
Similarity: 0.9621830537668924
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract TJFucks {
+function makeTJs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xd41ed6589df6484771d5c71dde0e84ede6356f82_CraigGrantShrimper_hatchsubscribers.sol 79815.0 True
File 2: 0xa965fb4db32d8600edcd5cc102a43e798bc3f08f_GPUMining_hatchEggs.sol 52823.0 False
Similarity: 0.9620757382342668
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract CraigGrantShrimper {
-function hatchsubscribers(address ref) public{
+contract GPUMining {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 subscribersUsed=getMysubscribers();
-        uint256 newCraigGrant=SafeMath.div(subscribersUsed,subscribers_TO_HATCH_1CraigGrant);
-        hatcheryCraigGrant[msg.sender]=SafeMath.add(hatcheryCraigGrant[msg.sender],newCraigGrant);
-        claimedsubscribers[msg.sender]=0;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
         lastHatch[msg.sender]=now;

-        //send referral subscribers
-        claimedsubscribers[referrals[msg.sender]]=SafeMath.add(claimedsubscribers[referrals[msg.sender]],SafeMath.div(subscribersUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf CraigGrant hoarding
-        marketsubscribers=SafeMath.add(marketsubscribers,SafeMath.div(subscribersUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdfe3662f696af844ae9c578196f15bce19aafee4_BullsFarmer_hatchEggs.sol 57433.0 True
File 2: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
Similarity: 0.9620342794678312
Difference:
--- file1
+++ file2
@@ -1,19 +1,21 @@
-contract BullsFarmer {
-function hatchEggs(address ref) public{
+contract EtherSpermBank {
+function makeSperm(address ref) public {
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
-            referrals[msg.sender]=ref;
+
+        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
+            referrals[msg.sender] = ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newBulls=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1BULLS);
-        hatcheryBulls[msg.sender]=SafeMath.add(hatcheryBulls[msg.sender],newBulls);
-        claimedEggs[msg.sender]=0;
-        lastHatch[msg.sender]=now;
+
+        uint256 cellsUsed = getMyCells();
+        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
+        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
+        claimedCells[msg.sender] = 0;
+        lastEvent[msg.sender] = now;

-        //send referral eggs
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+        // send referral cells
+        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%

-        //boost market to nerf bulls hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        // boost market to prevent sprem hoarding
+        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
     }
 }

File 1: 0xdfe3662f696af844ae9c578196f15bce19aafee4_BullsFarmer_hatchEggs.sol 57433.0 True
File 2: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
Similarity: 0.9620335700351584
Difference:
--- file1
+++ file2
@@ -1,19 +1,21 @@
-contract BullsFarmer {
-function hatchEggs(address ref) public{
+contract SpermLabsReborn {
+function makeSperm(address ref) public {
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
-            referrals[msg.sender]=ref;
+
+        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
+            referrals[msg.sender] = ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newBulls=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1BULLS);
-        hatcheryBulls[msg.sender]=SafeMath.add(hatcheryBulls[msg.sender],newBulls);
-        claimedEggs[msg.sender]=0;
-        lastHatch[msg.sender]=now;
+
+        uint256 cellsUsed = getMyCells();
+        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
+        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
+        claimedCells[msg.sender] = 0;
+        lastEvent[msg.sender] = now;

-        //send referral eggs
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+        // send referral cells
+        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%

-        //boost market to nerf bulls hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        // boost market to prevent sprem hoarding
+        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
     }
 }

File 1: 0xcb71b51d9159a49050d56516737b4b497e98bb99_TronTronTron_PutGift.sol 83638.0 True
File 2: 0xbc272b58e7cd0a6002c95afd1f208898d756c580_DEDI_GI_Put_DEDI_gift.sol 23451.0 False
Similarity: 0.9619901216125772
Difference:
--- file1
+++ file2
@@ -1,8 +1,12 @@
-contract TronTronTron {
-function PutGift(address _receiver) public payable {
-        if( (!closed&&(msg.value >0.10 ether)) || sender==0x0 ) {
+contract DEDI_GI {
+function Put_DEDI_gift(address _reciver)
+    public
+    payable
+    {
+        if( (!closed&&(msg.value > 1 ether)) || sender==0x00 )
+        {
             sender = msg.sender;
-            receiver = _receiver;
+            reciver = _reciver;
             unlockTime = now;
         }
     }

File 1: 0x902e9bf649ba31b33089cc77815b54ddd8bea824_TipTop_buyEggs.sol 38219.0 False
File 2: 0x5088b94cf8a1143eb228b6d3f008350ca742ddc2_EtherCartel_buyDrugs.sol 53386.0 True
Similarity: 0.9615622657549469
Difference:
--- file1
+++ file2
@@ -1,9 +1,9 @@
-contract TipTop {
-function buyEggs() public payable{
+contract EtherCartel {
+function buyDrugs() public payable{
         require(initialized);
-        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(this.balance,msg.value));
-        eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
+        uint256 drugsBought=calculateDrugBuy(msg.value,SafeMath.sub(this.balance,msg.value));
+        drugsBought=SafeMath.sub(drugsBought,devFee(drugsBought));
         ceoAddress.transfer(devFee(msg.value));
-        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
+        claimedDrugs[msg.sender]=SafeMath.add(claimedDrugs[msg.sender],drugsBought);
     }
 }

File 1: 0xd41ed6589df6484771d5c71dde0e84ede6356f82_CraigGrantShrimper_hatchsubscribers.sol 79815.0 True
File 2: 0x55d743f548490c837858de0e815b2c3a7d4c3198_PacifistFarmer_hatchEggs.sol 51710.0 False
Similarity: 0.9608428424012382
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract CraigGrantShrimper {
-function hatchsubscribers(address ref) public{
+contract PacifistFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 subscribersUsed=getMysubscribers();
-        uint256 newCraigGrant=SafeMath.div(subscribersUsed,subscribers_TO_HATCH_1CraigGrant);
-        hatcheryCraigGrant[msg.sender]=SafeMath.add(hatcheryCraigGrant[msg.sender],newCraigGrant);
-        claimedsubscribers[msg.sender]=0;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newPacifist=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1PACIFIST);
+        hatcheryPacifist[msg.sender]=SafeMath.add(hatcheryPacifist[msg.sender],newPacifist);
+        claimedEggs[msg.sender]=0;
         lastHatch[msg.sender]=now;

-        //send referral subscribers
-        claimedsubscribers[referrals[msg.sender]]=SafeMath.add(claimedsubscribers[referrals[msg.sender]],SafeMath.div(subscribersUsed,5));
+
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf CraigGrant hoarding
-        marketsubscribers=SafeMath.add(marketsubscribers,SafeMath.div(subscribersUsed,10));
+
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0x5088b94cf8a1143eb228b6d3f008350ca742ddc2_EtherCartel_collectDrugs.sol 57529.0 True
File 2: 0x06483d0742a254fcc92f7240b92a9e728da377b0_ShrimpFarmer_hatchEggs.sol 52982.0 False
Similarity: 0.9608253515062212
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract EtherCartel {
-function collectDrugs(address ref) public{
+contract ShrimpFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 drugsUsed=getMyDrugs();
-        uint256 newKilo=SafeMath.div(drugsUsed,DRUGS_TO_PRODUCE_1KILO);
-        Kilos[msg.sender]=SafeMath.add(Kilos[msg.sender],newKilo);
-        claimedDrugs[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral drugs
-        claimedDrugs[referrals[msg.sender]]=SafeMath.add(claimedDrugs[referrals[msg.sender]],SafeMath.div(drugsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf kilo hoarding
-        marketDrugs=SafeMath.add(marketDrugs,SafeMath.div(drugsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,eggsUsed);
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x9a78a1bcc4c254eba53b811bbb42dc0bf915e166_EthOwls_hatchEggs.sol 57416.0 True
Similarity: 0.9604061450465292
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract EthOwls {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x31b9a21a2177848cea3d6a50c3e1054452ee8897_BotFarmer_hatchEggs.sol 57367.0 True
Similarity: 0.960286363273479
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract BotFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x31b9a21a2177848cea3d6a50c3e1054452ee8897_BotFarmer_hatchEggs.sol 57367.0 True
Similarity: 0.9602419803376984
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract BotFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x9a78a1bcc4c254eba53b811bbb42dc0bf915e166_EthOwls_hatchEggs.sol 57416.0 True
Similarity: 0.960113397637992
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract EthOwls {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x2c7bc39b1b0c9fdf200fd30c74c0a9a41c2c7047_JigsawGames2_hatchEggs.sol 72536.0 True
Similarity: 0.9599862143970492
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract JigsawGames2 {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x4cb697dab84df0192b6693a2efad75b1c9a3fdc9_SpermLab_hatchEggs.sol 103674.0 True
Similarity: 0.9599753446683038
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract SpermLab {
+function hatchEggs(address ref) public{
         require(initialized);
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
+        }
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
-        }
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
-
-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
-
-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x4cb697dab84df0192b6693a2efad75b1c9a3fdc9_SpermLab_hatchEggs.sol 103674.0 True
Similarity: 0.9599705203367278
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract SpermLab {
+function hatchEggs(address ref) public{
         require(initialized);
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
+        }
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
-        }
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
-
-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
-
-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x87e44796ce77e972149852cda66cfd1c403d5ec3_SpermLabs_hatchEggs.sol 64852.0 True
Similarity: 0.9599222610732832
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract SpermLabs {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x87e44796ce77e972149852cda66cfd1c403d5ec3_SpermLabs_hatchEggs.sol 64852.0 True
Similarity: 0.9598922978011486
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract SpermLabs {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x163c64805c98fa2732f13030de457165f89493f9_HarjFarmer_hatchEggs.sol 72384.0 True
Similarity: 0.9597950938011608
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract HarjFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x2c7bc39b1b0c9fdf200fd30c74c0a9a41c2c7047_JigsawGames2_hatchEggs.sol 72536.0 True
Similarity: 0.9597942948926328
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract JigsawGames2 {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x26d781bace3a5da52aad1f94bc14692bfc136718_Tardis_hatchEggs.sol 57264.0 True
Similarity: 0.9597910147712304
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract Tardis {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x58d46475da68984bacf1f2843b85e0fdbcbc6cef_TrumpFarmer_hatchEggs.sol 57384.0 True
Similarity: 0.9597252410838624
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract TrumpFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x163c64805c98fa2732f13030de457165f89493f9_HarjFarmer_hatchEggs.sol 72384.0 True
Similarity: 0.9596645726212104
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract HarjFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x26d781bace3a5da52aad1f94bc14692bfc136718_Tardis_hatchEggs.sol 57264.0 True
Similarity: 0.959642791877792
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract Tardis {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0xb44d36a18b18015c546f5efa37bb1e3db5f24063_FishFarmer_hatchEggs.sol 57384.0 True
Similarity: 0.959633498816612
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract FishFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x58d46475da68984bacf1f2843b85e0fdbcbc6cef_TrumpFarmer_hatchEggs.sol 57384.0 True
Similarity: 0.9596120548559368
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract TrumpFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0x4cba96e12b8085fd9bc17fb37290b6bf9a213863_EtherKebab_makeKebabs.sol 57570.0 True
File 2: 0x06483d0742a254fcc92f7240b92a9e728da377b0_ShrimpFarmer_hatchEggs.sol 52982.0 False
Similarity: 0.9596120436065152
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherKebab {
-function makeKebabs(address ref) public
-    {
+contract ShrimpFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
-        {
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 kebabUsed=getMyKebabs();
-        uint256 newKebaber=SafeMath.div(kebabUsed,KEBABER_TO_MAKE_1KEBAB);
-        workingKebaber[msg.sender]=SafeMath.add(workingKebaber[msg.sender],newKebaber);
-        claimedKebabs[msg.sender]=0;
-        lastKebab[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral kebab
-        claimedKebabs[referrals[msg.sender]]=SafeMath.add(claimedKebabs[referrals[msg.sender]],SafeMath.div(kebabUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

         //boost market to nerf shrimp hoarding
-        marketKebabs=SafeMath.add(marketKebabs,SafeMath.div(kebabUsed,10));
+        marketEggs=SafeMath.add(marketEggs,eggsUsed);
     }
 }

File 1: 0xe6074bf0124c4f67cfa10a5efdfd16bd0541537a_SnakeFarmer_hatchEggs.sol 57450.0 True
File 2: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
Similarity: 0.9595763923092908
Difference:
--- file1
+++ file2
@@ -1,19 +1,21 @@
-contract SnakeFarmer {
-function hatchEggs(address ref) public{
+contract EtherSpermBank {
+function makeSperm(address ref) public {
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
-            referrals[msg.sender]=ref;
+
+        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
+            referrals[msg.sender] = ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newSnake=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SNAKE);
-        hatcherySnake[msg.sender]=SafeMath.add(hatcherySnake[msg.sender],newSnake);
-        claimedEggs[msg.sender]=0;
-        lastHatch[msg.sender]=now;
+
+        uint256 cellsUsed = getMyCells();
+        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
+        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
+        claimedCells[msg.sender] = 0;
+        lastEvent[msg.sender] = now;

-        //send referral eggs
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+        // send referral cells
+        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%

-        //boost market to nerf snake hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        // boost market to prevent sprem hoarding
+        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x18293de649fb8d8e1c8824abd214f7480c61e4a4_ShroomeryFarmer_hatchEggs.sol 57513.0 True
Similarity: 0.9595713168561768
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract ShroomeryFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0xb44d36a18b18015c546f5efa37bb1e3db5f24063_FishFarmer_hatchEggs.sol 57384.0 True
Similarity: 0.9595619027108336
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract FishFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x18293de649fb8d8e1c8824abd214f7480c61e4a4_ShroomeryFarmer_hatchEggs.sol 57513.0 True
Similarity: 0.959490121766931
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract ShroomeryFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x84eeca28082982abd1d68eadf2c5f509dd181bad_ShroomFarmer_hatchEggs.sol 88780.0 True
Similarity: 0.9594587658214426
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract ShroomFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x1a4f7a5208c7dd4cf24633ac4d42e41b21e3d5f7_CrocsFarmer_hatchEggs.sol 57362.0 True
Similarity: 0.959451977272295
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract CrocsFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newCrocs=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1CROCS);
+        hatcheryCrocs[msg.sender]=SafeMath.add(hatcheryCrocs[msg.sender],newCrocs);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf crocs hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x84eeca28082982abd1d68eadf2c5f509dd181bad_ShroomFarmer_hatchEggs.sol 88780.0 True
Similarity: 0.959366580281318
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract ShroomFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x1a4f7a5208c7dd4cf24633ac4d42e41b21e3d5f7_CrocsFarmer_hatchEggs.sol 57362.0 True
Similarity: 0.9593546925879348
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract CrocsFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newCrocs=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1CROCS);
+        hatcheryCrocs[msg.sender]=SafeMath.add(hatcheryCrocs[msg.sender],newCrocs);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf crocs hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_hatchSeeds.sol 57548.0 True
File 2: 0x06483d0742a254fcc92f7240b92a9e728da377b0_ShrimpFarmer_hatchEggs.sol 52982.0 False
Similarity: 0.9593338207042176
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract RiceFarmer {
-function hatchSeeds(address ref) public{
+contract ShrimpFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 eggsUsed=getMySeeds();
-        uint256 newRice=SafeMath.div(eggsUsed,SEEDS_TO_HATCH_1RICE);
-        hatcheryRice[msg.sender]=SafeMath.add(hatcheryRice[msg.sender],newRice);
-        claimedSeeds[msg.sender]=0;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
         lastHatch[msg.sender]=now;
-
+
         //send referral eggs
-        claimedSeeds[referrals[msg.sender]]=SafeMath.add(claimedSeeds[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
-
-        //boost market to nerf rice hoarding
-        marketSeeds=SafeMath.add(marketSeeds,SafeMath.div(eggsUsed,10));
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,eggsUsed);
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x32c4b55bfd8465d714caff08a9c177c09f16dcfe_EtherFarmDevSim_hatchEggs.sol 57372.0 True
Similarity: 0.959306351057969
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract EtherFarmDevSim {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x7f9433949f2cbbc6421f1f496d689837be35934e_DinosaurFarmerNew_hatchEggs.sol 57384.0 True
Similarity: 0.9592733844754942
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract DinosaurFarmerNew {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x4702a04b84dbd61a7494283349444ea784ba9593_AlienFarmer_hatchEggs.sol 57372.0 True
Similarity: 0.9592716815082816
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract AlienFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xe6074bf0124c4f67cfa10a5efdfd16bd0541537a_SnakeFarmer_hatchEggs.sol 57450.0 True
File 2: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
Similarity: 0.9592587872546792
Difference:
--- file1
+++ file2
@@ -1,19 +1,21 @@
-contract SnakeFarmer {
-function hatchEggs(address ref) public{
+contract SpermLabsReborn {
+function makeSperm(address ref) public {
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
-            referrals[msg.sender]=ref;
+
+        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
+            referrals[msg.sender] = ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newSnake=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SNAKE);
-        hatcherySnake[msg.sender]=SafeMath.add(hatcherySnake[msg.sender],newSnake);
-        claimedEggs[msg.sender]=0;
-        lastHatch[msg.sender]=now;
+
+        uint256 cellsUsed = getMyCells();
+        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
+        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
+        claimedCells[msg.sender] = 0;
+        lastEvent[msg.sender] = now;

-        //send referral eggs
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+        // send referral cells
+        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%

-        //boost market to nerf snake hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        // boost market to prevent sprem hoarding
+        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x32f778f246ba5f8ad8eb35a0d638e9075abe5b19_HipsterFarmer_hatchEggs.sol 57428.0 True
Similarity: 0.959227746407326
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract HipsterFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newHipster=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1HIPSTER);
+        hatcheryHipster[msg.sender]=SafeMath.add(hatcheryHipster[msg.sender],newHipster);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x7f9433949f2cbbc6421f1f496d689837be35934e_DinosaurFarmerNew_hatchEggs.sol 57384.0 True
Similarity: 0.9592264976484706
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract DinosaurFarmerNew {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x6cd6215a23890630f39400ce37e3cb5d31304b8c_BankerFarmer_hatchEggs.sol 57384.0 True
Similarity: 0.9592239193013083
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract BankerFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newBanker=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1BANKER);
+        hatcheryBanker[msg.sender]=SafeMath.add(hatcheryBanker[msg.sender],newBanker);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf banker hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x4702a04b84dbd61a7494283349444ea784ba9593_AlienFarmer_hatchEggs.sol 57372.0 True
Similarity: 0.9592154963201648
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract AlienFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x6c4ca515f04722d079862a03dec1e5c011491e12_ToadFarmer_hatchEggs.sol 72367.0 True
Similarity: 0.9590313030993608
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract ToadFarmer {
+function hatchEggs(address ref) public {
         require(initialized);
-
         if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
             referrals[msg.sender] = ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed = getMyEggs();
+        uint256 newToad = SafeMath.div(eggsUsed, EGGS_TO_HATCH_1TOAD);
+        hatcheryToad[msg.sender] = SafeMath.add(hatcheryToad[msg.sender], newToad);
+        claimedEggs[msg.sender] = 0;
+        lastHatch[msg.sender] = now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        // Send referral eggs
+        claimedEggs[referrals[msg.sender]] = SafeMath.add(claimedEggs[referrals[msg.sender]], SafeMath.div(eggsUsed, 5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        // Boost market to stop toad hoarding
+        marketEggs = SafeMath.add(marketEggs, SafeMath.div(eggsUsed, 10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x0aa39dfb6968c279ceddfab187668001e3df3dcb_FairyFarmer_hatchEggs.sol 57438.0 True
Similarity: 0.9589390126079016
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract FairyFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newFairy=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1FAIRY);
+        hatcheryFairy[msg.sender]=SafeMath.add(hatcheryFairy[msg.sender],newFairy);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x32c4b55bfd8465d714caff08a9c177c09f16dcfe_EtherFarmDevSim_hatchEggs.sol 57372.0 True
Similarity: 0.9588992563372049
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract EtherFarmDevSim {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x6c4ca515f04722d079862a03dec1e5c011491e12_ToadFarmer_hatchEggs.sol 72367.0 True
Similarity: 0.9588879948125464
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract ToadFarmer {
+function hatchEggs(address ref) public {
         require(initialized);
-
         if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
             referrals[msg.sender] = ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed = getMyEggs();
+        uint256 newToad = SafeMath.div(eggsUsed, EGGS_TO_HATCH_1TOAD);
+        hatcheryToad[msg.sender] = SafeMath.add(hatcheryToad[msg.sender], newToad);
+        claimedEggs[msg.sender] = 0;
+        lastHatch[msg.sender] = now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        // Send referral eggs
+        claimedEggs[referrals[msg.sender]] = SafeMath.add(claimedEggs[referrals[msg.sender]], SafeMath.div(eggsUsed, 5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        // Boost market to stop toad hoarding
+        marketEggs = SafeMath.add(marketEggs, SafeMath.div(eggsUsed, 10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x32f778f246ba5f8ad8eb35a0d638e9075abe5b19_HipsterFarmer_hatchEggs.sol 57428.0 True
Similarity: 0.9588536619974648
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract HipsterFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newHipster=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1HIPSTER);
+        hatcheryHipster[msg.sender]=SafeMath.add(hatcheryHipster[msg.sender],newHipster);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x0aa39dfb6968c279ceddfab187668001e3df3dcb_FairyFarmer_hatchEggs.sol 57438.0 True
Similarity: 0.9588435825663026
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract FairyFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newFairy=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1FAIRY);
+        hatcheryFairy[msg.sender]=SafeMath.add(hatcheryFairy[msg.sender],newFairy);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x21732476ec79bb32373deaf58d796755664780e6_TurtleFarmer_hatchEggs.sol 57362.0 True
Similarity: 0.9588085872483544
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract TurtleFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newTurtle=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1TURTLE);
+        hatcheryTurtle[msg.sender]=SafeMath.add(hatcheryTurtle[msg.sender],newTurtle);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf turtle hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x0c24e3aa0fc411debf74f138674cf2066c2e0ace_FalconFarmer_hatchEggs.sol 57372.0 True
Similarity: 0.9587772753707025
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract FalconFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newFalcon=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1FALCON);
+        hatcheryFalcon[msg.sender]=SafeMath.add(hatcheryFalcon[msg.sender],newFalcon);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf falcon hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x21732476ec79bb32373deaf58d796755664780e6_TurtleFarmer_hatchEggs.sol 57362.0 True
Similarity: 0.9587541613032784
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract TurtleFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newTurtle=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1TURTLE);
+        hatcheryTurtle[msg.sender]=SafeMath.add(hatcheryTurtle[msg.sender],newTurtle);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf turtle hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x0057826d01b84775dbc9b3a5ba1152b095988481_SquirrelFarmer_hatchEggs.sol 57428.0 True
Similarity: 0.958698523162574
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract SquirrelFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newSquirrel=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SQUIRREL);
+        hatcherySquirrel[msg.sender]=SafeMath.add(hatcherySquirrel[msg.sender],newSquirrel);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf squirrel hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x0c24e3aa0fc411debf74f138674cf2066c2e0ace_FalconFarmer_hatchEggs.sol 57372.0 True
Similarity: 0.958579907370324
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract FalconFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newFalcon=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1FALCON);
+        hatcheryFalcon[msg.sender]=SafeMath.add(hatcheryFalcon[msg.sender],newFalcon);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf falcon hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x0057826d01b84775dbc9b3a5ba1152b095988481_SquirrelFarmer_hatchEggs.sol 57428.0 True
Similarity: 0.9584573385117564
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract SquirrelFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newSquirrel=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SQUIRREL);
+        hatcherySquirrel[msg.sender]=SafeMath.add(hatcherySquirrel[msg.sender],newSquirrel);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf squirrel hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0x645f0c9695f2b970e623ae29538fdb1a67bd6b6e__8thereum_withdraw.sol 43921.0 False
File 2: 0x645f0c9695f2b970e623ae29538fdb1a67bd6b6e__8thereum_reinvest.sol 99422.0 True
Similarity: 0.9584065102705532
Difference:
--- file1
+++ file2
@@ -1,25 +1,27 @@
 contract _8thereum {
-function withdraw()
+function reinvest()
+        onlyDividendPositive()
         onlyNonOwner()
-        onlyDividendPositive()
         public
-    {
+    {
+
         require (msg.sender == tx.origin);

-        // setup data
+        // fetch dividends
+        uint256 dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address customerAddress = msg.sender;
-        uint256 dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[customerAddress] +=  int256(SafeMath.mul(dividends, magnitude));

-        // add ref. bonus
+        // retrieve ref. bonus
         dividends += referralBalances[customerAddress];
         referralBalances[customerAddress] = 0;

-        customerAddress.transfer(dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(dividends, 0x0);

         // fire event for logging
-        emit onWithdraw(customerAddress, dividends);
+        emit onReinvestment(customerAddress, dividends, _tokens);
     }
 }

File 1: 0x6c4ca515f04722d079862a03dec1e5c011491e12_ToadFarmer_buyEggs.sol 38269.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_buySeeds.sol 60966.0 True
Similarity: 0.9581850261283462
Difference:
--- file1
+++ file2
@@ -1,9 +1,11 @@
-contract ToadFarmer {
-function buyEggs() public payable {
+contract RiceFarmer {
+function buySeeds() public payable{
         require(initialized);
-        uint256 eggsBought = calculateEggBuy(msg.value, SafeMath.sub(address(this).balance, msg.value));
-        eggsBought = SafeMath.sub(eggsBought, devFee(eggsBought));
-        claimedEggs[msg.sender] = SafeMath.add(claimedEggs[msg.sender], eggsBought);
-        ceoAddress.transfer(devFee(msg.value));
+        uint256 eggsBought=calculateSeedBuy(msg.value,SafeMath.sub(this.balance,msg.value));
+        eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
+
+        Divies.redistribution.value(devFee(msg.value))();
+
+        claimedSeeds[msg.sender]=SafeMath.add(claimedSeeds[msg.sender],eggsBought);
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x6cd6215a23890630f39400ce37e3cb5d31304b8c_BankerFarmer_hatchEggs.sol 57384.0 True
Similarity: 0.9581422468407446
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract BankerFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newBanker=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1BANKER);
+        hatcheryBanker[msg.sender]=SafeMath.add(hatcheryBanker[msg.sender],newBanker);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf banker hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xa965fb4db32d8600edcd5cc102a43e798bc3f08f_GPUMining_buyEggs.sol 53051.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_buySeeds.sol 60966.0 True
Similarity: 0.9568978160303144
Difference:
--- file1
+++ file2
@@ -1,9 +1,11 @@
-contract GPUMining {
-function buyEggs() public payable{
+contract RiceFarmer {
+function buySeeds() public payable{
         require(initialized);
-        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(address(this).balance,msg.value));
+        uint256 eggsBought=calculateSeedBuy(msg.value,SafeMath.sub(this.balance,msg.value));
         eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
-        ceoAddress.transfer(devFee(msg.value));
-        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
+
+        Divies.redistribution.value(devFee(msg.value))();
+
+        claimedSeeds[msg.sender]=SafeMath.add(claimedSeeds[msg.sender],eggsBought);
     }
 }

File 1: 0xd41ed6589df6484771d5c71dde0e84ede6356f82_CraigGrantShrimper_hatchsubscribers.sol 79815.0 True
File 2: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
Similarity: 0.9567756589494772
Difference:
--- file1
+++ file2
@@ -1,19 +1,21 @@
-contract CraigGrantShrimper {
-function hatchsubscribers(address ref) public{
+contract SpermLabsReborn {
+function makeSperm(address ref) public {
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
-            referrals[msg.sender]=ref;
+
+        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
+            referrals[msg.sender] = ref;
         }
-        uint256 subscribersUsed=getMysubscribers();
-        uint256 newCraigGrant=SafeMath.div(subscribersUsed,subscribers_TO_HATCH_1CraigGrant);
-        hatcheryCraigGrant[msg.sender]=SafeMath.add(hatcheryCraigGrant[msg.sender],newCraigGrant);
-        claimedsubscribers[msg.sender]=0;
-        lastHatch[msg.sender]=now;
+
+        uint256 cellsUsed = getMyCells();
+        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
+        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
+        claimedCells[msg.sender] = 0;
+        lastEvent[msg.sender] = now;

-        //send referral subscribers
-        claimedsubscribers[referrals[msg.sender]]=SafeMath.add(claimedsubscribers[referrals[msg.sender]],SafeMath.div(subscribersUsed,5));
+        // send referral cells
+        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%

-        //boost market to nerf CraigGrant hoarding
-        marketsubscribers=SafeMath.add(marketsubscribers,SafeMath.div(subscribersUsed,10));
+        // boost market to prevent sprem hoarding
+        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0xd41ed6589df6484771d5c71dde0e84ede6356f82_CraigGrantShrimper_hatchsubscribers.sol 79815.0 True
Similarity: 0.9563310222514976
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract CraigGrantShrimper {
+function hatchsubscribers(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 subscribersUsed=getMysubscribers();
+        uint256 newCraigGrant=SafeMath.div(subscribersUsed,subscribers_TO_HATCH_1CraigGrant);
+        hatcheryCraigGrant[msg.sender]=SafeMath.add(hatcheryCraigGrant[msg.sender],newCraigGrant);
+        claimedsubscribers[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral subscribers
+        claimedsubscribers[referrals[msg.sender]]=SafeMath.add(claimedsubscribers[referrals[msg.sender]],SafeMath.div(subscribersUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf CraigGrant hoarding
+        marketsubscribers=SafeMath.add(marketsubscribers,SafeMath.div(subscribersUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_hatchSeeds.sol 57548.0 True
Similarity: 0.955733049465704
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract RiceFarmer {
+function hatchSeeds(address ref) public{
         require(initialized);
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
+        }
+        uint256 eggsUsed=getMySeeds();
+        uint256 newRice=SafeMath.div(eggsUsed,SEEDS_TO_HATCH_1RICE);
+        hatcheryRice[msg.sender]=SafeMath.add(hatcheryRice[msg.sender],newRice);
+        claimedSeeds[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
-        }
+        //send referral eggs
+        claimedSeeds[referrals[msg.sender]]=SafeMath.add(claimedSeeds[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
-
-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
-
-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf rice hoarding
+        marketSeeds=SafeMath.add(marketSeeds,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xd41ed6589df6484771d5c71dde0e84ede6356f82_CraigGrantShrimper_getFreeCraigGrant.sol 22153.0 False
File 2: 0x32f778f246ba5f8ad8eb35a0d638e9075abe5b19_HipsterFarmer_getFreeHipster.sol 70180.0 True
Similarity: 0.9555504774751292
Difference:
--- file1
+++ file2
@@ -1,10 +1,10 @@
-contract CraigGrantShrimper {
-function getFreeCraigGrant() public payable{
+contract HipsterFarmer {
+function getFreeHipster() public payable{
         require(initialized);
-        require(msg.value==0.001 ether); //similar to mining fee, prevents bots
-        ceoAddress.transfer(msg.value); //YouTubemaster gets this entrance fee
-        require(hatcheryCraigGrant[msg.sender]==0);
+        require(msg.value==0.001 ether);
+        ceoAddress.transfer(msg.value);
+        require(hatcheryHipster[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcheryCraigGrant[msg.sender]=STARTING_CraigGrant;
+        hatcheryHipster[msg.sender]=STARTING_HIPSTER;
     }
 }

File 1: 0xd41ed6589df6484771d5c71dde0e84ede6356f82_CraigGrantShrimper_getFreeCraigGrant.sol 22153.0 False
File 2: 0x87e44796ce77e972149852cda66cfd1c403d5ec3_SpermLabs_getFreeShrimp.sol 70268.0 True
Similarity: 0.9553908994616408
Difference:
--- file1
+++ file2
@@ -1,10 +1,10 @@
-contract CraigGrantShrimper {
-function getFreeCraigGrant() public payable{
+contract SpermLabs {
+function getFreeShrimp() public payable{
         require(initialized);
         require(msg.value==0.001 ether); //similar to mining fee, prevents bots
-        ceoAddress.transfer(msg.value); //YouTubemaster gets this entrance fee
-        require(hatcheryCraigGrant[msg.sender]==0);
+        ceoAddress.transfer(msg.value); //snailmaster gets this entrance fee
+        require(hatcheryShrimp[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcheryCraigGrant[msg.sender]=STARTING_CraigGrant;
+        hatcheryShrimp[msg.sender]=STARTING_SHRIMP;
     }
 }

File 1: 0xd41ed6589df6484771d5c71dde0e84ede6356f82_CraigGrantShrimper_getFreeCraigGrant.sol 22153.0 False
File 2: 0x1054bf40be3e021e26fa5f6d627fe395a3fd3f26_PlumberCollector_getFreePlumber.sol 70535.0 True
Similarity: 0.9553496048978924
Difference:
--- file1
+++ file2
@@ -1,10 +1,11 @@
-contract CraigGrantShrimper {
-function getFreeCraigGrant() public payable{
+contract PlumberCollector {
+function getFreePlumber() public payable
+    {
         require(initialized);
         require(msg.value==0.001 ether); //similar to mining fee, prevents bots
-        ceoAddress.transfer(msg.value); //YouTubemaster gets this entrance fee
-        require(hatcheryCraigGrant[msg.sender]==0);
+        ceoAddress.transfer(msg.value); //ceo gets this entrance fee
+        require(hatcheryPlumber[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcheryCraigGrant[msg.sender]=STARTING_CraigGrant;
+        hatcheryPlumber[msg.sender]=STARTING_POOH;
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_hatchSeeds.sol 57548.0 True
Similarity: 0.9549928191616592
Difference:
--- file1
+++ file2
@@ -1,21 +1,19 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract RiceFarmer {
+function hatchSeeds(address ref) public{
         require(initialized);
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
+        }
+        uint256 eggsUsed=getMySeeds();
+        uint256 newRice=SafeMath.div(eggsUsed,SEEDS_TO_HATCH_1RICE);
+        hatcheryRice[msg.sender]=SafeMath.add(hatcheryRice[msg.sender],newRice);
+        claimedSeeds[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
-        }
+        //send referral eggs
+        claimedSeeds[referrals[msg.sender]]=SafeMath.add(claimedSeeds[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
-
-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
-
-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        //boost market to nerf rice hoarding
+        marketSeeds=SafeMath.add(marketSeeds,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0x6c4ca515f04722d079862a03dec1e5c011491e12_ToadFarmer_buyEggs.sol 38269.0 False
File 2: 0x5088b94cf8a1143eb228b6d3f008350ca742ddc2_EtherCartel_buyDrugs.sol 53386.0 True
Similarity: 0.954896203139298
Difference:
--- file1
+++ file2
@@ -1,9 +1,9 @@
-contract ToadFarmer {
-function buyEggs() public payable {
+contract EtherCartel {
+function buyDrugs() public payable{
         require(initialized);
-        uint256 eggsBought = calculateEggBuy(msg.value, SafeMath.sub(address(this).balance, msg.value));
-        eggsBought = SafeMath.sub(eggsBought, devFee(eggsBought));
-        claimedEggs[msg.sender] = SafeMath.add(claimedEggs[msg.sender], eggsBought);
+        uint256 drugsBought=calculateDrugBuy(msg.value,SafeMath.sub(this.balance,msg.value));
+        drugsBought=SafeMath.sub(drugsBought,devFee(drugsBought));
         ceoAddress.transfer(devFee(msg.value));
+        claimedDrugs[msg.sender]=SafeMath.add(claimedDrugs[msg.sender],drugsBought);
     }
 }

File 1: 0xd41ed6589df6484771d5c71dde0e84ede6356f82_CraigGrantShrimper_getFreeCraigGrant.sol 22153.0 False
File 2: 0x9a78a1bcc4c254eba53b811bbb42dc0bf915e166_EthOwls_getFreeShrimp.sol 70290.0 True
Similarity: 0.9547501335318658
Difference:
--- file1
+++ file2
@@ -1,10 +1,10 @@
-contract CraigGrantShrimper {
-function getFreeCraigGrant() public payable{
+contract EthOwls {
+function getFreeShrimp() public payable{
         require(initialized);
         require(msg.value==0.001 ether); //similar to mining fee, prevents bots
-        ceoAddress.transfer(msg.value); //YouTubemaster gets this entrance fee
-        require(hatcheryCraigGrant[msg.sender]==0);
+        ceoAddress.transfer(msg.value); //owlmaster gets this entrance fee
+        require(hatcheryShrimp[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcheryCraigGrant[msg.sender]=STARTING_CraigGrant;
+        hatcheryShrimp[msg.sender]=STARTING_SHRIMP;
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_getFreeSperm.sol 70246.0 True
File 2: 0x0057826d01b84775dbc9b3a5ba1152b095988481_SquirrelFarmer_getFreeSquirrel.sol 50107.5 False
Similarity: 0.954457428685338
Difference:
--- file1
+++ file2
@@ -1,11 +1,10 @@
-contract SpermLabsReborn {
-function getFreeSperm() public payable {
+contract SquirrelFarmer {
+function getFreeSquirrel() public payable{
         require(initialized);
-        require(msg.value == 0.001 ether); // similar to mining fee, prevents bots
-        spermlordAddress.transfer(msg.value); // the spermlord gets the entry fee ;)
-
-        require(ballSperm[msg.sender] == 0);
-        lastEvent[msg.sender] = now;
-        ballSperm[msg.sender] = STARTING_SPERM;
+        require(msg.value==0.001 ether); //similar to mining fee, prevents bots
+        ceoAddress.transfer(msg.value); //squirrelmaster gets this entrance fee
+        require(hatcherySquirrel[msg.sender]==0);
+        lastHatch[msg.sender]=now;
+        hatcherySquirrel[msg.sender]=STARTING_SQUIRREL;
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_getFreeSperm.sol 70246.0 True
File 2: 0x0057826d01b84775dbc9b3a5ba1152b095988481_SquirrelFarmer_getFreeSquirrel.sol 50107.5 False
Similarity: 0.9540296257577304
Difference:
--- file1
+++ file2
@@ -1,11 +1,10 @@
-contract EtherSpermBank {
-function getFreeSperm() public payable {
+contract SquirrelFarmer {
+function getFreeSquirrel() public payable{
         require(initialized);
-        require(msg.value == 0.001 ether); // similar to mining fee, prevents bots
-        spermlordAddress.transfer(msg.value); // the spermlord gets the entry fee ;)
-
-        require(ballSperm[msg.sender] == 0);
-        lastEvent[msg.sender] = now;
-        ballSperm[msg.sender] = STARTING_SPERM;
+        require(msg.value==0.001 ether); //similar to mining fee, prevents bots
+        ceoAddress.transfer(msg.value); //squirrelmaster gets this entrance fee
+        require(hatcherySquirrel[msg.sender]==0);
+        lastHatch[msg.sender]=now;
+        hatcherySquirrel[msg.sender]=STARTING_SQUIRREL;
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0xdfe3662f696af844ae9c578196f15bce19aafee4_BullsFarmer_hatchEggs.sol 57433.0 True
Similarity: 0.9539134249796488
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract BullsFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newBulls=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1BULLS);
+        hatcheryBulls[msg.sender]=SafeMath.add(hatcheryBulls[msg.sender],newBulls);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf bulls hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x6ded330704d6b4734de6dc82b609765006dde197_CryptoStrippers_hatchCoins.sol 57428.0 True
Similarity: 0.9538451573553524
Difference:
--- file1
+++ file2
@@ -1,21 +1,15 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract CryptoStrippers {
+function hatchCoins(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
+        if(referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender){
             referrals[msg.sender] = ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
-
-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
-
-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        uint256 coinsUsed = getMyCoins();
+        uint256 newStrippers = SafeMath.div(coinsUsed,COINS_TO_HATCH_1STRIPPERS);
+        hatcheryStrippers[msg.sender] = SafeMath.add(hatcheryStrippers[msg.sender],newStrippers);
+        claimedCoins[msg.sender] = 0;
+        lastHatch[msg.sender] = now;
+        claimedCoins[referrals[msg.sender]] = SafeMath.add(claimedCoins[referrals[msg.sender]],SafeMath.div(coinsUsed,5));
+        marketCoins = SafeMath.add(marketCoins,SafeMath.div(coinsUsed,10));
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x6ded330704d6b4734de6dc82b609765006dde197_CryptoStrippers_hatchCoins.sol 57428.0 True
Similarity: 0.9536907586965628
Difference:
--- file1
+++ file2
@@ -1,21 +1,15 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract CryptoStrippers {
+function hatchCoins(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
+        if(referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender){
             referrals[msg.sender] = ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
-
-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
-
-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        uint256 coinsUsed = getMyCoins();
+        uint256 newStrippers = SafeMath.div(coinsUsed,COINS_TO_HATCH_1STRIPPERS);
+        hatcheryStrippers[msg.sender] = SafeMath.add(hatcheryStrippers[msg.sender],newStrippers);
+        claimedCoins[msg.sender] = 0;
+        lastHatch[msg.sender] = now;
+        claimedCoins[referrals[msg.sender]] = SafeMath.add(claimedCoins[referrals[msg.sender]],SafeMath.div(coinsUsed,5));
+        marketCoins = SafeMath.add(marketCoins,SafeMath.div(coinsUsed,10));
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x5088b94cf8a1143eb228b6d3f008350ca742ddc2_EtherCartel_collectDrugs.sol 57529.0 True
Similarity: 0.95366597799556
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract EtherCartel {
+function collectDrugs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
+        uint256 drugsUsed=getMyDrugs();
+        uint256 newKilo=SafeMath.div(drugsUsed,DRUGS_TO_PRODUCE_1KILO);
+        Kilos[msg.sender]=SafeMath.add(Kilos[msg.sender],newKilo);
+        claimedDrugs[msg.sender]=0;
         lastCollect[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral drugs
+        claimedDrugs[referrals[msg.sender]]=SafeMath.add(claimedDrugs[referrals[msg.sender]],SafeMath.div(drugsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf kilo hoarding
+        marketDrugs=SafeMath.add(marketDrugs,SafeMath.div(drugsUsed,10));
     }
 }

File 1: 0xd41ed6589df6484771d5c71dde0e84ede6356f82_CraigGrantShrimper_getFreeCraigGrant.sol 22153.0 False
File 2: 0x21732476ec79bb32373deaf58d796755664780e6_TurtleFarmer_getFreeTurtle.sol 69167.0 True
Similarity: 0.9535744245835992
Difference:
--- file1
+++ file2
@@ -1,10 +1,10 @@
-contract CraigGrantShrimper {
-function getFreeCraigGrant() public payable{
+contract TurtleFarmer {
+function getFreeTurtle() public payable{
         require(initialized);
         require(msg.value==0.001 ether); //similar to mining fee, prevents bots
-        ceoAddress.transfer(msg.value); //YouTubemaster gets this entrance fee
-        require(hatcheryCraigGrant[msg.sender]==0);
+        ceoAddress.transfer(msg.value); //turtlemaster gets this entrance fee
+        require(hatcheryTurtle[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcheryCraigGrant[msg.sender]=STARTING_CraigGrant;
+        hatcheryTurtle[msg.sender]=STARTING_TURTLE;
     }
 }

File 1: 0xe6074bf0124c4f67cfa10a5efdfd16bd0541537a_SnakeFarmer_getFreeSnake.sol 70224.0 True
File 2: 0xd41ed6589df6484771d5c71dde0e84ede6356f82_CraigGrantShrimper_getFreeCraigGrant.sol 22153.0 False
Similarity: 0.9533754361180488
Difference:
--- file1
+++ file2
@@ -1,10 +1,10 @@
-contract SnakeFarmer {
-function getFreeSnake() public payable{
+contract CraigGrantShrimper {
+function getFreeCraigGrant() public payable{
         require(initialized);
         require(msg.value==0.001 ether); //similar to mining fee, prevents bots
-        ceoAddress.transfer(msg.value); //snakemaster gets this entrance fee
-        require(hatcherySnake[msg.sender]==0);
+        ceoAddress.transfer(msg.value); //YouTubemaster gets this entrance fee
+        require(hatcheryCraigGrant[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcherySnake[msg.sender]=STARTING_SNAKE;
+        hatcheryCraigGrant[msg.sender]=STARTING_CraigGrant;
     }
 }

File 1: 0xd41ed6589df6484771d5c71dde0e84ede6356f82_CraigGrantShrimper_hatchsubscribers.sol 79815.0 True
File 2: 0x06483d0742a254fcc92f7240b92a9e728da377b0_ShrimpFarmer_hatchEggs.sol 52982.0 False
Similarity: 0.9532906045031372
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract CraigGrantShrimper {
-function hatchsubscribers(address ref) public{
+contract ShrimpFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 subscribersUsed=getMysubscribers();
-        uint256 newCraigGrant=SafeMath.div(subscribersUsed,subscribers_TO_HATCH_1CraigGrant);
-        hatcheryCraigGrant[msg.sender]=SafeMath.add(hatcheryCraigGrant[msg.sender],newCraigGrant);
-        claimedsubscribers[msg.sender]=0;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
         lastHatch[msg.sender]=now;

-        //send referral subscribers
-        claimedsubscribers[referrals[msg.sender]]=SafeMath.add(claimedsubscribers[referrals[msg.sender]],SafeMath.div(subscribersUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf CraigGrant hoarding
-        marketsubscribers=SafeMath.add(marketsubscribers,SafeMath.div(subscribersUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,eggsUsed);
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x1054bf40be3e021e26fa5f6d627fe395a3fd3f26_PlumberCollector_hatchPoohs.sol 57251.0 True
Similarity: 0.9531133770250364
Difference:
--- file1
+++ file2
@@ -1,19 +1,21 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract PlumberCollector {
+function hatchPoohs(address ref) public
+    {
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender)
+        {
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 poohsUsed=getMyPoohs();
+        uint256 newPlumber=SafeMath.div(poohsUsed,POOH_TO_CALL_1PLUMBER);
+        hatcheryPlumber[msg.sender]=SafeMath.add(hatcheryPlumber[msg.sender],newPlumber);
+        claimedPoohs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral poohs
+        claimedPoohs[referrals[msg.sender]]=SafeMath.add(claimedPoohs[referrals[msg.sender]],SafeMath.div(poohsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketPoohs=SafeMath.add(marketPoohs,SafeMath.div(poohsUsed,10));
     }
 }

File 1: 0x6d6db51e3e4838369676508ce25db64f4ca7e5e4_EtherX_withdraw.sol 43482.0 False
File 2: 0x4b181c8f6124d531cb89d3d4e6faad54c63c30c1_H3D_reinvest.sol 82332.0 True
Similarity: 0.952889206391946
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract EtherX {
-function withdraw()
+contract H3D {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x6d6db51e3e4838369676508ce25db64f4ca7e5e4_EtherX_withdraw.sol 43482.0 False
File 2: 0x117a36055bf56b0157bd1df3cf45bfd7e01e1663_ETCH3dV_reinvest.sol 82059.0 True
Similarity: 0.9528821037763396
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract EtherX {
-function withdraw()
+contract ETCH3dV {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0xb7f8c6384f2adff5576fa9563015a09c3e7058c4_DinoFarm_hatchEggs.sol 59171.0 True
Similarity: 0.9528433077008956
Difference:
--- file1
+++ file2
@@ -1,21 +1,18 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract DinoFarm {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
-
-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
-
-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        uint256 eggsUsed=getMyEggs();
+        uint256 newDino=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1DINO);
+        hatcheryDino[msg.sender]=SafeMath.add(hatcheryDino[msg.sender],newDino);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+        //boost market to nerf dino hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        onHatchEggs(msg.sender, newDino, ref);
     }
 }

File 1: 0x8c79b780fa39e183C9eA25f70d1351161f86594e_shrimpyramid_reinvest.sol 82714.0 True
File 2: 0x6d6db51e3e4838369676508ce25db64f4ca7e5e4_EtherX_withdraw.sol 43482.0 False
Similarity: 0.9528212638349935
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract shrimpyramid {
-function reinvest()
+contract EtherX {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0xc7d83c28fe7c9325dad8b54a55a64334420226c2_POWEROFTHREE_reinvest.sol 87885.0 True
File 2: 0x6d6db51e3e4838369676508ce25db64f4ca7e5e4_EtherX_withdraw.sol 43482.0 False
Similarity: 0.9527869021911052
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWEROFTHREE {
-function reinvest()
+contract EtherX {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0x9d0d6be62dc3b5712a23cf3de3fa95f372555e23_BLING_reinvest.sol 88648.0 True
File 2: 0x6d6db51e3e4838369676508ce25db64f4ca7e5e4_EtherX_withdraw.sol 43482.0 False
Similarity: 0.952718525222296
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract BLING {
-function reinvest()
+contract EtherX {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0x9a5F32b99c15099b676d9892b47F381E227907A8_BEERS_reinvest.sol 88768.0 True
File 2: 0x6d6db51e3e4838369676508ce25db64f4ca7e5e4_EtherX_withdraw.sol 43482.0 False
Similarity: 0.9527120738254572
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract BEERS {
-function reinvest()
+contract EtherX {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0xdaa42065346b0b88327c2d2074bb80d8c2ad9c6f_EtherSpermBank_makeSperm.sol 52748.0 False
File 2: 0x67601d7a7cbbd77368785122c508503f168b1daa_CatFarmer_hatchEggs.sol 57384.0 True
Similarity: 0.952694558435171
Difference:
--- file1
+++ file2
@@ -1,21 +1,18 @@
-contract EtherSpermBank {
-function makeSperm(address ref) public {
+contract CatFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newCat=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1Cat);
+        hatcheryCat[msg.sender]=SafeMath.add(hatcheryCat[msg.sender],newCat);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0x77e79f7c8e256f3fbf009abd4503e5374f93a774_RICEBALLZ_reinvest.sol 82827.0 True
File 2: 0x6d6db51e3e4838369676508ce25db64f4ca7e5e4_EtherX_withdraw.sol 43482.0 False
Similarity: 0.9526822429659896
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract RICEBALLZ {
-function reinvest()
+contract EtherX {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0xb7f8c6384f2adff5576fa9563015a09c3e7058c4_DinoFarm_hatchEggs.sol 59171.0 True
Similarity: 0.9526115314447764
Difference:
--- file1
+++ file2
@@ -1,21 +1,18 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract DinoFarm {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
-
-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
-
-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        uint256 eggsUsed=getMyEggs();
+        uint256 newDino=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1DINO);
+        hatcheryDino[msg.sender]=SafeMath.add(hatcheryDino[msg.sender],newDino);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+        //boost market to nerf dino hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        onHatchEggs(msg.sender, newDino, ref);
     }
 }

File 1: 0x6d6db51e3e4838369676508ce25db64f4ca7e5e4_EtherX_withdraw.sol 43482.0 False
File 2: 0x4650af1d35b0f10da5e68bba2b0b1582a6dcdace_BBB_reinvest.sol 82593.0 True
Similarity: 0.9525994179780858
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract EtherX {
-function withdraw()
+contract BBB {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xa572e356fe636db853f0d55493f2f866f0558cde_POWH1337_reinvest.sol 83333.0 True
File 2: 0x6d6db51e3e4838369676508ce25db64f4ca7e5e4_EtherX_withdraw.sol 43482.0 False
Similarity: 0.95253475623291
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWH1337 {
-function reinvest()
+contract EtherX {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0xc6f01013bb252bea52646ef91d5a662515684701_SpermLabsReborn_makeSperm.sol 52748.0 False
File 2: 0x67601d7a7cbbd77368785122c508503f168b1daa_CatFarmer_hatchEggs.sol 57384.0 True
Similarity: 0.9524934215186376
Difference:
--- file1
+++ file2
@@ -1,21 +1,18 @@
-contract SpermLabsReborn {
-function makeSperm(address ref) public {
+contract CatFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-
-        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-
-        uint256 cellsUsed = getMyCells();
-        uint256 newSperm = SafeMath.div(cellsUsed, CELLS_TO_MAKE_1_SPERM);
-        ballSperm[msg.sender] = SafeMath.add(ballSperm[msg.sender], newSperm);
-        claimedCells[msg.sender] = 0;
-        lastEvent[msg.sender] = now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newCat=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1Cat);
+        hatcheryCat[msg.sender]=SafeMath.add(hatcheryCat[msg.sender],newCat);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        // send referral cells
-        claimedCells[referrals[msg.sender]] = SafeMath.add(claimedCells[referrals[msg.sender]], SafeMath.div(cellsUsed, 5)); // +20%
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        // boost market to prevent sprem hoarding
-        marketCells = SafeMath.add(marketCells, SafeMath.div(cellsUsed, 10)); // +10%
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0xabc0f8ecf12b21dddf012bace1f7e4927a7ad403_TJFucks_makeTJs.sol 57506.0 True
Similarity: 0.952456806048562
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract TJFucks {
+function makeTJs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0x748c6ed3f78f5f06ceb76834f195d3a05b7d628a_POWH33_reinvest.sol 82772.0 True
File 2: 0x6d6db51e3e4838369676508ce25db64f4ca7e5e4_EtherX_withdraw.sol 43482.0 False
Similarity: 0.9524175141777156
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWH33 {
-function reinvest()
+contract EtherX {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0x6d6db51e3e4838369676508ce25db64f4ca7e5e4_EtherX_withdraw.sol 43482.0 False
File 2: 0x560431a917c5bf4f5831935a199d6516472bcff1_POFOMO_reinvest.sol 82805.0 True
Similarity: 0.9523463629864208
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract EtherX {
-function withdraw()
+contract POFOMO {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xd41ed6589df6484771d5c71dde0e84ede6356f82_CraigGrantShrimper_getFreeCraigGrant.sol 22153.0 False
File 2: 0x0c24e3aa0fc411debf74f138674cf2066c2e0ace_FalconFarmer_getFreeFalcon.sol 70488.0 True
Similarity: 0.9521718442183248
Difference:
--- file1
+++ file2
@@ -1,10 +1,10 @@
-contract CraigGrantShrimper {
-function getFreeCraigGrant() public payable{
+contract FalconFarmer {
+function getFreeFalcon() public payable{
         require(initialized);
         require(msg.value==0.001 ether); //similar to mining fee, prevents bots
-        ceoAddress.transfer(msg.value); //YouTubemaster gets this entrance fee
-        require(hatcheryCraigGrant[msg.sender]==0);
+        ceoAddress.transfer(msg.value); //falconmaster gets this entrance fee
+        require(hatcheryFalcon[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcheryCraigGrant[msg.sender]=STARTING_CraigGrant;
+        hatcheryFalcon[msg.sender]=STARTING_FALCON;
     }
 }

File 1: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_buySeeds.sol 60966.0 True
File 2: 0x1054bf40be3e021e26fa5f6d627fe395a3fd3f26_PlumberCollector_buyPoohs.sol 52785.0 False
Similarity: 0.952085789698725
Difference:
--- file1
+++ file2
@@ -1,11 +1,10 @@
-contract RiceFarmer {
-function buySeeds() public payable{
+contract PlumberCollector {
+function buyPoohs() public payable
+    {
         require(initialized);
-        uint256 eggsBought=calculateSeedBuy(msg.value,SafeMath.sub(this.balance,msg.value));
-        eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
-
-        Divies.redistribution.value(devFee(msg.value))();
-
-        claimedSeeds[msg.sender]=SafeMath.add(claimedSeeds[msg.sender],eggsBought);
+        uint256 poohsBought=calculatePoohBuy(msg.value,SafeMath.sub(address(this).balance,msg.value));
+        poohsBought=SafeMath.sub(poohsBought,devFee(poohsBought));
+        ceoAddress.transfer(devFee(msg.value));
+        claimedPoohs[msg.sender]=SafeMath.add(claimedPoohs[msg.sender],poohsBought);
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x9a78a1bcc4c254eba53b811bbb42dc0bf915e166_EthOwls_hatchEggs.sol 57416.0 True
Similarity: 0.9520632199186592
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract EthOwls {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xd41ed6589df6484771d5c71dde0e84ede6356f82_CraigGrantShrimper_getFreeCraigGrant.sol 22153.0 False
File 2: 0x0aa39dfb6968c279ceddfab187668001e3df3dcb_FairyFarmer_getFreeFairy.sol 70532.0 True
Similarity: 0.9520449490248424
Difference:
--- file1
+++ file2
@@ -1,10 +1,10 @@
-contract CraigGrantShrimper {
-function getFreeCraigGrant() public payable{
+contract FairyFarmer {
+function getFreeFairy() public payable{
         require(initialized);
-        require(msg.value==0.001 ether); //similar to mining fee, prevents bots
-        ceoAddress.transfer(msg.value); //YouTubemaster gets this entrance fee
-        require(hatcheryCraigGrant[msg.sender]==0);
+        require(msg.value==0.001 ether);
+        ceoAddress.transfer(msg.value);
+        require(hatcheryFairy[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcheryCraigGrant[msg.sender]=STARTING_CraigGrant;
+        hatcheryFairy[msg.sender]=STARTING_FAIRY;
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0xb44d36a18b18015c546f5efa37bb1e3db5f24063_FishFarmer_hatchEggs.sol 57384.0 True
Similarity: 0.951898067314763
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract FishFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0x6d6db51e3e4838369676508ce25db64f4ca7e5e4_EtherX_withdraw.sol 43482.0 False
File 2: 0x68b1a67786f78b7a9a140c17864da69e3867c333_Pyrgressive_reinvest.sol 107396.5 True
Similarity: 0.9518553644880896
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract EtherX {
-function withdraw()
+contract Pyrgressive {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xdfe3662f696af844ae9c578196f15bce19aafee4_BullsFarmer_getFreeBulls.sol 70202.0 True
File 2: 0xd41ed6589df6484771d5c71dde0e84ede6356f82_CraigGrantShrimper_getFreeCraigGrant.sol 22153.0 False
Similarity: 0.9518077264391464
Difference:
--- file1
+++ file2
@@ -1,10 +1,10 @@
-contract BullsFarmer {
-function getFreeBulls() public payable{
+contract CraigGrantShrimper {
+function getFreeCraigGrant() public payable{
         require(initialized);
         require(msg.value==0.001 ether); //similar to mining fee, prevents bots
-        ceoAddress.transfer(msg.value); //bullsmaster gets this entrance fee
-        require(hatcheryBulls[msg.sender]==0);
+        ceoAddress.transfer(msg.value); //YouTubemaster gets this entrance fee
+        require(hatcheryCraigGrant[msg.sender]==0);
         lastHatch[msg.sender]=now;
-        hatcheryBulls[msg.sender]=STARTING_BULLS;
+        hatcheryCraigGrant[msg.sender]=STARTING_CraigGrant;
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x21732476ec79bb32373deaf58d796755664780e6_TurtleFarmer_hatchEggs.sol 57362.0 True
Similarity: 0.9516822998983666
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract TurtleFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newTurtle=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1TURTLE);
+        hatcheryTurtle[msg.sender]=SafeMath.add(hatcheryTurtle[msg.sender],newTurtle);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf turtle hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x163c64805c98fa2732f13030de457165f89493f9_HarjFarmer_hatchEggs.sol 72384.0 True
Similarity: 0.951669571126368
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract HarjFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x58d46475da68984bacf1f2843b85e0fdbcbc6cef_TrumpFarmer_hatchEggs.sol 57384.0 True
Similarity: 0.9516628515061912
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract TrumpFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x6c4ca515f04722d079862a03dec1e5c011491e12_ToadFarmer_hatchEggs.sol 72367.0 True
Similarity: 0.951647086852187
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract ToadFarmer {
+function hatchEggs(address ref) public {
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
-            referrals[msg.sender]=ref;
+        if (referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender) {
+            referrals[msg.sender] = ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed = getMyEggs();
+        uint256 newToad = SafeMath.div(eggsUsed, EGGS_TO_HATCH_1TOAD);
+        hatcheryToad[msg.sender] = SafeMath.add(hatcheryToad[msg.sender], newToad);
+        claimedEggs[msg.sender] = 0;
+        lastHatch[msg.sender] = now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        // Send referral eggs
+        claimedEggs[referrals[msg.sender]] = SafeMath.add(claimedEggs[referrals[msg.sender]], SafeMath.div(eggsUsed, 5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        // Boost market to stop toad hoarding
+        marketEggs = SafeMath.add(marketEggs, SafeMath.div(eggsUsed, 10));
     }
 }

File 1: 0xb32f6c232c7eeb2f563309a1a7ddcc2f86680070_PowX_withdraw.sol 43525.0 False
File 2: 0x748c6ed3f78f5f06ceb76834f195d3a05b7d628a_POWH33_reinvest.sol 82772.0 True
Similarity: 0.9516465146061248
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract PowX {
-function withdraw()
+contract POWH33 {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x31b9a21a2177848cea3d6a50c3e1054452ee8897_BotFarmer_hatchEggs.sol 57367.0 True
Similarity: 0.9515878421998792
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract BotFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x1a4f7a5208c7dd4cf24633ac4d42e41b21e3d5f7_CrocsFarmer_hatchEggs.sol 57362.0 True
Similarity: 0.9515345046697704
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract CrocsFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newCrocs=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1CROCS);
+        hatcheryCrocs[msg.sender]=SafeMath.add(hatcheryCrocs[msg.sender],newCrocs);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf crocs hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xb32f6c232c7eeb2f563309a1a7ddcc2f86680070_PowX_withdraw.sol 43525.0 False
File 2: 0xa572e356fe636db853f0d55493f2f866f0558cde_POWH1337_reinvest.sol 83333.0 True
Similarity: 0.9514898107724776
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract PowX {
-function withdraw()
+contract POWH1337 {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xc7d83c28fe7c9325dad8b54a55a64334420226c2_POWEROFTHREE_reinvest.sol 87885.0 True
File 2: 0xb32f6c232c7eeb2f563309a1a7ddcc2f86680070_PowX_withdraw.sol 43525.0 False
Similarity: 0.9514477324599392
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWEROFTHREE {
-function reinvest()
+contract PowX {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x2c7bc39b1b0c9fdf200fd30c74c0a9a41c2c7047_JigsawGames2_hatchEggs.sol 72536.0 True
Similarity: 0.9513880982781387
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract JigsawGames2 {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x32f778f246ba5f8ad8eb35a0d638e9075abe5b19_HipsterFarmer_hatchEggs.sol 57428.0 True
Similarity: 0.9513863636798012
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract HipsterFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newHipster=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1HIPSTER);
+        hatcheryHipster[msg.sender]=SafeMath.add(hatcheryHipster[msg.sender],newHipster);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xb32f6c232c7eeb2f563309a1a7ddcc2f86680070_PowX_withdraw.sol 43525.0 False
File 2: 0x4b181c8f6124d531cb89d3d4e6faad54c63c30c1_H3D_reinvest.sol 82332.0 True
Similarity: 0.9513850861132704
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract PowX {
-function withdraw()
+contract H3D {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xb32f6c232c7eeb2f563309a1a7ddcc2f86680070_PowX_withdraw.sol 43525.0 False
File 2: 0x117a36055bf56b0157bd1df3cf45bfd7e01e1663_ETCH3dV_reinvest.sol 82059.0 True
Similarity: 0.951361920580185
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract PowX {
-function withdraw()
+contract ETCH3dV {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x18293de649fb8d8e1c8824abd214f7480c61e4a4_ShroomeryFarmer_hatchEggs.sol 57513.0 True
Similarity: 0.9513529884165252
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract ShroomeryFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x26d781bace3a5da52aad1f94bc14692bfc136718_Tardis_hatchEggs.sol 57264.0 True
Similarity: 0.9513368296865288
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract Tardis {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xb32f6c232c7eeb2f563309a1a7ddcc2f86680070_PowX_withdraw.sol 43525.0 False
File 2: 0x8c79b780fa39e183C9eA25f70d1351161f86594e_shrimpyramid_reinvest.sol 82714.0 True
Similarity: 0.951320179662456
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract PowX {
-function withdraw()
+contract shrimpyramid {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x4702a04b84dbd61a7494283349444ea784ba9593_AlienFarmer_hatchEggs.sol 57372.0 True
Similarity: 0.9512931725375632
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract AlienFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x0057826d01b84775dbc9b3a5ba1152b095988481_SquirrelFarmer_hatchEggs.sol 57428.0 True
Similarity: 0.9512822650493622
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract SquirrelFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newSquirrel=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SQUIRREL);
+        hatcherySquirrel[msg.sender]=SafeMath.add(hatcherySquirrel[msg.sender],newSquirrel);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf squirrel hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x84eeca28082982abd1d68eadf2c5f509dd181bad_ShroomFarmer_hatchEggs.sol 88780.0 True
Similarity: 0.9512542971077784
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract ShroomFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xb32f6c232c7eeb2f563309a1a7ddcc2f86680070_PowX_withdraw.sol 43525.0 False
File 2: 0x9d0d6be62dc3b5712a23cf3de3fa95f372555e23_BLING_reinvest.sol 88648.0 True
Similarity: 0.9511976275117264
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract PowX {
-function withdraw()
+contract BLING {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xb32f6c232c7eeb2f563309a1a7ddcc2f86680070_PowX_withdraw.sol 43525.0 False
File 2: 0x9a5F32b99c15099b676d9892b47F381E227907A8_BEERS_reinvest.sol 88768.0 True
Similarity: 0.9511857843195424
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract PowX {
-function withdraw()
+contract BEERS {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xb32f6c232c7eeb2f563309a1a7ddcc2f86680070_PowX_withdraw.sol 43525.0 False
File 2: 0x77e79f7c8e256f3fbf009abd4503e5374f93a774_RICEBALLZ_reinvest.sol 82827.0 True
Similarity: 0.9511528528716328
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract PowX {
-function withdraw()
+contract RICEBALLZ {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x861ab771d6787ac7eecc2d33b6fed63a06ae7d1c_NekoToken_withdraw.sol 43481.0 False
File 2: 0x117a36055bf56b0157bd1df3cf45bfd7e01e1663_ETCH3dV_reinvest.sol 82059.0 True
Similarity: 0.9511445597567806
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract NekoToken {
-function withdraw()
+contract ETCH3dV {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xb32f6c232c7eeb2f563309a1a7ddcc2f86680070_PowX_withdraw.sol 43525.0 False
File 2: 0x560431a917c5bf4f5831935a199d6516472bcff1_POFOMO_reinvest.sol 82805.0 True
Similarity: 0.951139516628408
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract PowX {
-function withdraw()
+contract POFOMO {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x861ab771d6787ac7eecc2d33b6fed63a06ae7d1c_NekoToken_withdraw.sol 43481.0 False
File 2: 0x4b181c8f6124d531cb89d3d4e6faad54c63c30c1_H3D_reinvest.sol 82332.0 True
Similarity: 0.9511354785255708
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract NekoToken {
-function withdraw()
+contract H3D {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x87e44796ce77e972149852cda66cfd1c403d5ec3_SpermLabs_hatchEggs.sol 64852.0 True
Similarity: 0.9511302728184514
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract SpermLabs {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xb3c5c669d60ba538fa4a3f3262c07e368085fccb_FunFaceToken_withdraw.sol 43481.0 False
File 2: 0x117a36055bf56b0157bd1df3cf45bfd7e01e1663_ETCH3dV_reinvest.sol 82059.0 True
Similarity: 0.9511154884284848
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract FunFaceToken {
-function withdraw()
+contract ETCH3dV {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xa965fb4db32d8600edcd5cc102a43e798bc3f08f_GPUMining_hatchEggs.sol 52823.0 False
File 2: 0x6ded330704d6b4734de6dc82b609765006dde197_CryptoStrippers_hatchCoins.sol 57428.0 True
Similarity: 0.9511154685940558
Difference:
--- file1
+++ file2
@@ -1,19 +1,15 @@
-contract GPUMining {
-function hatchEggs(address ref) public{
+contract CryptoStrippers {
+function hatchCoins(address ref) public{
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
-            referrals[msg.sender]=ref;
+        if(referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender){
+            referrals[msg.sender] = ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
-        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
-        claimedEggs[msg.sender]=0;
-        lastHatch[msg.sender]=now;
-
-        //send referral eggs
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
-
-        //boost market to nerf shrimp hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        uint256 coinsUsed = getMyCoins();
+        uint256 newStrippers = SafeMath.div(coinsUsed,COINS_TO_HATCH_1STRIPPERS);
+        hatcheryStrippers[msg.sender] = SafeMath.add(hatcheryStrippers[msg.sender],newStrippers);
+        claimedCoins[msg.sender] = 0;
+        lastHatch[msg.sender] = now;
+        claimedCoins[referrals[msg.sender]] = SafeMath.add(claimedCoins[referrals[msg.sender]],SafeMath.div(coinsUsed,5));
+        marketCoins = SafeMath.add(marketCoins,SafeMath.div(coinsUsed,10));
     }
 }

File 1: 0xb3c5c669d60ba538fa4a3f3262c07e368085fccb_FunFaceToken_withdraw.sol 43481.0 False
File 2: 0x4b181c8f6124d531cb89d3d4e6faad54c63c30c1_H3D_reinvest.sol 82332.0 True
Similarity: 0.9511095702579168
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract FunFaceToken {
-function withdraw()
+contract H3D {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xb32f6c232c7eeb2f563309a1a7ddcc2f86680070_PowX_withdraw.sol 43525.0 False
File 2: 0x4650af1d35b0f10da5e68bba2b0b1582a6dcdace_BBB_reinvest.sol 82593.0 True
Similarity: 0.9510825965476564
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract PowX {
-function withdraw()
+contract BBB {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xc7d83c28fe7c9325dad8b54a55a64334420226c2_POWEROFTHREE_reinvest.sol 87885.0 True
File 2: 0xb3c5c669d60ba538fa4a3f3262c07e368085fccb_FunFaceToken_withdraw.sol 43481.0 False
Similarity: 0.9509853161857164
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWEROFTHREE {
-function reinvest()
+contract FunFaceToken {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0xc7d83c28fe7c9325dad8b54a55a64334420226c2_POWEROFTHREE_reinvest.sol 87885.0 True
File 2: 0x861ab771d6787ac7eecc2d33b6fed63a06ae7d1c_NekoToken_withdraw.sol 43481.0 False
Similarity: 0.9509849543337634
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWEROFTHREE {
-function reinvest()
+contract NekoToken {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0x8c79b780fa39e183C9eA25f70d1351161f86594e_shrimpyramid_reinvest.sol 82714.0 True
File 2: 0x861ab771d6787ac7eecc2d33b6fed63a06ae7d1c_NekoToken_withdraw.sol 43481.0 False
Similarity: 0.9509754205584316
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract shrimpyramid {
-function reinvest()
+contract NekoToken {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0xb3c5c669d60ba538fa4a3f3262c07e368085fccb_FunFaceToken_withdraw.sol 43481.0 False
File 2: 0x8c79b780fa39e183C9eA25f70d1351161f86594e_shrimpyramid_reinvest.sol 82714.0 True
Similarity: 0.9509491714891016
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract FunFaceToken {
-function withdraw()
+contract shrimpyramid {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x7f9433949f2cbbc6421f1f496d689837be35934e_DinosaurFarmerNew_hatchEggs.sol 57384.0 True
Similarity: 0.9509473337267392
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract DinosaurFarmerNew {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0x9d0d6be62dc3b5712a23cf3de3fa95f372555e23_BLING_reinvest.sol 88648.0 True
File 2: 0x861ab771d6787ac7eecc2d33b6fed63a06ae7d1c_NekoToken_withdraw.sol 43481.0 False
Similarity: 0.950932607047346
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract BLING {
-function reinvest()
+contract NekoToken {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0xae7bcd6673de31017fed61ca915ab36ef2556d24_Defapacoin_withdraw.sol 43547.0 False
File 2: 0x117a36055bf56b0157bd1df3cf45bfd7e01e1663_ETCH3dV_reinvest.sol 82059.0 True
Similarity: 0.9509176801109815
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract Defapacoin {
-function withdraw()
+contract ETCH3dV {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xae7bcd6673de31017fed61ca915ab36ef2556d24_Defapacoin_withdraw.sol 43547.0 False
File 2: 0x4b181c8f6124d531cb89d3d4e6faad54c63c30c1_H3D_reinvest.sol 82332.0 True
Similarity: 0.9509101017632848
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract Defapacoin {
-function withdraw()
+contract H3D {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x6d6db51e3e4838369676508ce25db64f4ca7e5e4_EtherX_withdraw.sol 43482.0 False
File 2: 0x6bacca3cce57a46fd0822df7c07afbf9d81d96d9_Jiggs_reinvest.sol 76876.0 True
Similarity: 0.9509023129127222
Difference:
--- file1
+++ file2
@@ -1,23 +1,20 @@
-contract EtherX {
-function withdraw()
-        onlyStronghands()
-        public
-    {
-        // setup data
+contract Jiggs {
+function reinvest() onlyStronghands() public {
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);
-
-        // add ref. bonus
+
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;
-
-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
-
+
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+
         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xb3c5c669d60ba538fa4a3f3262c07e368085fccb_FunFaceToken_withdraw.sol 43481.0 False
File 2: 0x4650af1d35b0f10da5e68bba2b0b1582a6dcdace_BBB_reinvest.sol 82593.0 True
Similarity: 0.9508852185718092
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract FunFaceToken {
-function withdraw()
+contract BBB {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xb3c5c669d60ba538fa4a3f3262c07e368085fccb_FunFaceToken_withdraw.sol 43481.0 False
File 2: 0x9d0d6be62dc3b5712a23cf3de3fa95f372555e23_BLING_reinvest.sol 88648.0 True
Similarity: 0.9508772326677388
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract FunFaceToken {
-function withdraw()
+contract BLING {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x861ab771d6787ac7eecc2d33b6fed63a06ae7d1c_NekoToken_withdraw.sol 43481.0 False
File 2: 0x4650af1d35b0f10da5e68bba2b0b1582a6dcdace_BBB_reinvest.sol 82593.0 True
Similarity: 0.950874988510271
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract NekoToken {
-function withdraw()
+contract BBB {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x4cb697dab84df0192b6693a2efad75b1c9a3fdc9_SpermLab_hatchEggs.sol 103674.0 True
Similarity: 0.9508710864507788
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract SpermLab {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
-
-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
-
-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;
+
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xb44d36a18b18015c546f5efa37bb1e3db5f24063_FishFarmer_buyEggs.sol 53335.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_buySeeds.sol 60966.0 True
Similarity: 0.9508271674455184
Difference:
--- file1
+++ file2
@@ -1,9 +1,11 @@
-contract FishFarmer {
-function buyEggs() public payable{
+contract RiceFarmer {
+function buySeeds() public payable{
         require(initialized);
-        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(this.balance,msg.value));
+        uint256 eggsBought=calculateSeedBuy(msg.value,SafeMath.sub(this.balance,msg.value));
         eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
-        ceoAddress.transfer(devFee(msg.value));
-        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
+
+        Divies.redistribution.value(devFee(msg.value))();
+
+        claimedSeeds[msg.sender]=SafeMath.add(claimedSeeds[msg.sender],eggsBought);
     }
 }

File 1: 0x6ded330704d6b4734de6dc82b609765006dde197_CryptoStrippers_hatchCoins.sol 57428.0 True
File 2: 0x3b8b95eccce73667305b322fd89e5a148e262f62_MiningRigFarmer_hatchEggs.sol 53075.0 False
Similarity: 0.9507993365937052
Difference:
--- file1
+++ file2
@@ -1,15 +1,19 @@
-contract CryptoStrippers {
-function hatchCoins(address ref) public{
+contract MiningRigFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-        if(referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender){
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-        uint256 coinsUsed = getMyCoins();
-        uint256 newStrippers = SafeMath.div(coinsUsed,COINS_TO_HATCH_1STRIPPERS);
-        hatcheryStrippers[msg.sender] = SafeMath.add(hatcheryStrippers[msg.sender],newStrippers);
-        claimedCoins[msg.sender] = 0;
-        lastHatch[msg.sender] = now;
-        claimedCoins[referrals[msg.sender]] = SafeMath.add(claimedCoins[referrals[msg.sender]],SafeMath.div(coinsUsed,5));
-        marketCoins = SafeMath.add(marketCoins,SafeMath.div(coinsUsed,10));
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;
+
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0x6d6db51e3e4838369676508ce25db64f4ca7e5e4_EtherX_withdraw.sol 43482.0 False
File 2: 0x36f6a1353a3e1c008782e86bfe551c6f8b8c3370_Shadow3D_reinvest.sol 83091.0 True
Similarity: 0.950786530599714
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract EtherX {
-function withdraw()
+contract Shadow3D {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x861ab771d6787ac7eecc2d33b6fed63a06ae7d1c_NekoToken_withdraw.sol 43481.0 False
File 2: 0x77e79f7c8e256f3fbf009abd4503e5374f93a774_RICEBALLZ_reinvest.sol 82827.0 True
Similarity: 0.9507780438668748
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract NekoToken {
-function withdraw()
+contract RICEBALLZ {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x6ded330704d6b4734de6dc82b609765006dde197_CryptoStrippers_hatchCoins.sol 57428.0 True
File 2: 0x55d743f548490c837858de0e815b2c3a7d4c3198_PacifistFarmer_hatchEggs.sol 51710.0 False
Similarity: 0.9507591742310174
Difference:
--- file1
+++ file2
@@ -1,15 +1,19 @@
-contract CryptoStrippers {
-function hatchCoins(address ref) public{
+contract PacifistFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-        if(referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender){
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-        uint256 coinsUsed = getMyCoins();
-        uint256 newStrippers = SafeMath.div(coinsUsed,COINS_TO_HATCH_1STRIPPERS);
-        hatcheryStrippers[msg.sender] = SafeMath.add(hatcheryStrippers[msg.sender],newStrippers);
-        claimedCoins[msg.sender] = 0;
-        lastHatch[msg.sender] = now;
-        claimedCoins[referrals[msg.sender]] = SafeMath.add(claimedCoins[referrals[msg.sender]],SafeMath.div(coinsUsed,5));
-        marketCoins = SafeMath.add(marketCoins,SafeMath.div(coinsUsed,10));
+        uint256 eggsUsed=getMyEggs();
+        uint256 newPacifist=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1PACIFIST);
+        hatcheryPacifist[msg.sender]=SafeMath.add(hatcheryPacifist[msg.sender],newPacifist);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;
+
+
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+
+
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xae7bcd6673de31017fed61ca915ab36ef2556d24_Defapacoin_withdraw.sol 43547.0 False
File 2: 0x8c79b780fa39e183C9eA25f70d1351161f86594e_shrimpyramid_reinvest.sol 82714.0 True
Similarity: 0.9507419634313204
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract Defapacoin {
-function withdraw()
+contract shrimpyramid {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x96f3e4086575e2b9d76ab5b1871a94b8b3a08d39_CarlosMatos_reinvest.sol 82835.0 True
File 2: 0x6d6db51e3e4838369676508ce25db64f4ca7e5e4_EtherX_withdraw.sol 43482.0 False
Similarity: 0.9507398756055652
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract CarlosMatos {
-function reinvest()
+contract EtherX {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0xb3c5c669d60ba538fa4a3f3262c07e368085fccb_FunFaceToken_withdraw.sol 43481.0 False
File 2: 0x77e79f7c8e256f3fbf009abd4503e5374f93a774_RICEBALLZ_reinvest.sol 82827.0 True
Similarity: 0.9507249560126924
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract FunFaceToken {
-function withdraw()
+contract RICEBALLZ {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xc7d83c28fe7c9325dad8b54a55a64334420226c2_POWEROFTHREE_reinvest.sol 87885.0 True
File 2: 0xae7bcd6673de31017fed61ca915ab36ef2556d24_Defapacoin_withdraw.sol 43547.0 False
Similarity: 0.9507169229965622
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWEROFTHREE {
-function reinvest()
+contract Defapacoin {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0xae7bcd6673de31017fed61ca915ab36ef2556d24_Defapacoin_withdraw.sol 43547.0 False
File 2: 0x4650af1d35b0f10da5e68bba2b0b1582a6dcdace_BBB_reinvest.sol 82593.0 True
Similarity: 0.9507066307757176
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract Defapacoin {
-function withdraw()
+contract BBB {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xb3c5c669d60ba538fa4a3f3262c07e368085fccb_FunFaceToken_withdraw.sol 43481.0 False
File 2: 0xa572e356fe636db853f0d55493f2f866f0558cde_POWH1337_reinvest.sol 83333.0 True
Similarity: 0.9506992537086948
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract FunFaceToken {
-function withdraw()
+contract POWH1337 {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xa572e356fe636db853f0d55493f2f866f0558cde_POWH1337_reinvest.sol 83333.0 True
File 2: 0x861ab771d6787ac7eecc2d33b6fed63a06ae7d1c_NekoToken_withdraw.sol 43481.0 False
Similarity: 0.9506780139049597
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWH1337 {
-function reinvest()
+contract NekoToken {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0x9a5F32b99c15099b676d9892b47F381E227907A8_BEERS_reinvest.sol 88768.0 True
File 2: 0x861ab771d6787ac7eecc2d33b6fed63a06ae7d1c_NekoToken_withdraw.sol 43481.0 False
Similarity: 0.9506758946423028
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract BEERS {
-function reinvest()
+contract NekoToken {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0xae7bcd6673de31017fed61ca915ab36ef2556d24_Defapacoin_withdraw.sol 43547.0 False
File 2: 0x9d0d6be62dc3b5712a23cf3de3fa95f372555e23_BLING_reinvest.sol 88648.0 True
Similarity: 0.9506747545571896
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract Defapacoin {
-function withdraw()
+contract BLING {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xb3c5c669d60ba538fa4a3f3262c07e368085fccb_FunFaceToken_withdraw.sol 43481.0 False
File 2: 0x560431a917c5bf4f5831935a199d6516472bcff1_POFOMO_reinvest.sol 82805.0 True
Similarity: 0.9506678908390054
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract FunFaceToken {
-function withdraw()
+contract POFOMO {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x0aa39dfb6968c279ceddfab187668001e3df3dcb_FairyFarmer_hatchEggs.sol 57438.0 True
Similarity: 0.9506616113113546
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract FairyFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newFairy=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1FAIRY);
+        hatcheryFairy[msg.sender]=SafeMath.add(hatcheryFairy[msg.sender],newFairy);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x32c4b55bfd8465d714caff08a9c177c09f16dcfe_EtherFarmDevSim_hatchEggs.sol 57372.0 True
Similarity: 0.9506363701022924
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract EtherFarmDevSim {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xdfe3662f696af844ae9c578196f15bce19aafee4_BullsFarmer_buyEggs.sol 53379.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_buySeeds.sol 60966.0 True
Similarity: 0.9506257366290812
Difference:
--- file1
+++ file2
@@ -1,9 +1,11 @@
-contract BullsFarmer {
-function buyEggs() public payable{
+contract RiceFarmer {
+function buySeeds() public payable{
         require(initialized);
-        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(this.balance,msg.value));
+        uint256 eggsBought=calculateSeedBuy(msg.value,SafeMath.sub(this.balance,msg.value));
         eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
-        ceoAddress.transfer(devFee(msg.value));
-        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
+
+        Divies.redistribution.value(devFee(msg.value))();
+
+        claimedSeeds[msg.sender]=SafeMath.add(claimedSeeds[msg.sender],eggsBought);
     }
 }

File 1: 0xb3c5c669d60ba538fa4a3f3262c07e368085fccb_FunFaceToken_withdraw.sol 43481.0 False
File 2: 0x748c6ed3f78f5f06ceb76834f195d3a05b7d628a_POWH33_reinvest.sol 82772.0 True
Similarity: 0.950610580495095
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract FunFaceToken {
-function withdraw()
+contract POWH33 {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x6ded330704d6b4734de6dc82b609765006dde197_CryptoStrippers_hatchCoins.sol 57428.0 True
File 2: 0x09f6742e42daafae735e14ec53b5ee95b66c2886_TittyFarmer_hatchEggs.sol 52968.0 False
Similarity: 0.9506022676876458
Difference:
--- file1
+++ file2
@@ -1,15 +1,19 @@
-contract CryptoStrippers {
-function hatchCoins(address ref) public{
+contract TittyFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
-        if(referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender){
-            referrals[msg.sender] = ref;
+        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
+            referrals[msg.sender]=ref;
         }
-        uint256 coinsUsed = getMyCoins();
-        uint256 newStrippers = SafeMath.div(coinsUsed,COINS_TO_HATCH_1STRIPPERS);
-        hatcheryStrippers[msg.sender] = SafeMath.add(hatcheryStrippers[msg.sender],newStrippers);
-        claimedCoins[msg.sender] = 0;
-        lastHatch[msg.sender] = now;
-        claimedCoins[referrals[msg.sender]] = SafeMath.add(claimedCoins[referrals[msg.sender]],SafeMath.div(coinsUsed,5));
-        marketCoins = SafeMath.add(marketCoins,SafeMath.div(coinsUsed,10));
+        uint256 eggsUsed=getMyEggs();
+        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
+        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;
+
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
+
+        //boost market to nerf shrimp hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xd9913F9823fA526840869f1cb8F515Bb69E6A51c_DinosaurFarmer_hatchEggs.sol 52968.0 False
File 2: 0x6ded330704d6b4734de6dc82b609765006dde197_CryptoStrippers_hatchCoins.sol 57428.0 True
Similarity: 0.950599259587774
Difference:
--- file1
+++ file2
@@ -1,19 +1,15 @@
-contract DinosaurFarmer {
-function hatchEggs(address ref) public{
+contract CryptoStrippers {
+function hatchCoins(address ref) public{
         require(initialized);
-        if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
-            referrals[msg.sender]=ref;
+        if(referrals[msg.sender] == 0 && referrals[msg.sender] != msg.sender){
+            referrals[msg.sender] = ref;
         }
-        uint256 eggsUsed=getMyEggs();
-        uint256 newShrimp=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1SHRIMP);
-        hatcheryShrimp[msg.sender]=SafeMath.add(hatcheryShrimp[msg.sender],newShrimp);
-        claimedEggs[msg.sender]=0;
-        lastHatch[msg.sender]=now;
-
-        //send referral eggs
-        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));
-
-        //boost market to nerf shrimp hoarding
-        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
+        uint256 coinsUsed = getMyCoins();
+        uint256 newStrippers = SafeMath.div(coinsUsed,COINS_TO_HATCH_1STRIPPERS);
+        hatcheryStrippers[msg.sender] = SafeMath.add(hatcheryStrippers[msg.sender],newStrippers);
+        claimedCoins[msg.sender] = 0;
+        lastHatch[msg.sender] = now;
+        claimedCoins[referrals[msg.sender]] = SafeMath.add(claimedCoins[referrals[msg.sender]],SafeMath.div(coinsUsed,5));
+        marketCoins = SafeMath.add(marketCoins,SafeMath.div(coinsUsed,10));
     }
 }

File 1: 0xabc0f8ecf12b21dddf012bace1f7e4927a7ad403_TJFucks_buyFucks.sol 52985.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_buySeeds.sol 60966.0 True
Similarity: 0.9505849347797792
Difference:
--- file1
+++ file2
@@ -1,9 +1,11 @@
-contract TJFucks {
-function buyFucks() public payable{
+contract RiceFarmer {
+function buySeeds() public payable{
         require(initialized);
-        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(this.balance,msg.value));
+        uint256 eggsBought=calculateSeedBuy(msg.value,SafeMath.sub(this.balance,msg.value));
         eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
-        ceoAddress.transfer(devFee(msg.value));
-        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
+
+        Divies.redistribution.value(devFee(msg.value))();
+
+        claimedSeeds[msg.sender]=SafeMath.add(claimedSeeds[msg.sender],eggsBought);
     }
 }

File 1: 0x748c6ed3f78f5f06ceb76834f195d3a05b7d628a_POWH33_reinvest.sol 82772.0 True
File 2: 0x57cff17810be242bc4760c03cd5bcc6ec0879470_POWMlite_withdraw.sol 43504.0 False
Similarity: 0.9505807104490678
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWH33 {
-function reinvest()
+contract POWMlite {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0xae7bcd6673de31017fed61ca915ab36ef2556d24_Defapacoin_withdraw.sol 43547.0 False
File 2: 0x9a5F32b99c15099b676d9892b47F381E227907A8_BEERS_reinvest.sol 88768.0 True
Similarity: 0.9505751054343384
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract Defapacoin {
-function withdraw()
+contract BEERS {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x861ab771d6787ac7eecc2d33b6fed63a06ae7d1c_NekoToken_withdraw.sol 43481.0 False
File 2: 0x748c6ed3f78f5f06ceb76834f195d3a05b7d628a_POWH33_reinvest.sol 82772.0 True
Similarity: 0.9505689471114872
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract NekoToken {
-function withdraw()
+contract POWH33 {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xd6647d2d40b1ee8ab766dec0822ec756985fc1b3_Mummy3D_withdraw.sol 45261.0 False
File 2: 0xd6647d2d40b1ee8ab766dec0822ec756985fc1b3_Mummy3D_reinvest.sol 78412.0 True
Similarity: 0.9505599693673972
Difference:
--- file1
+++ file2
@@ -1,24 +1,24 @@
 contract Mummy3D {
-function withdraw()
+function reinvest()
         pyramidConstruct(false)
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
+        payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // update dividend tracker
-        payoutsTo_[_customerAddress] += (int256) (_dividends * magnitude);
-
-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        emit onWithdraw(_customerAddress, _dividends);
+        emit onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x861ab771d6787ac7eecc2d33b6fed63a06ae7d1c_NekoToken_withdraw.sol 43481.0 False
File 2: 0x560431a917c5bf4f5831935a199d6516472bcff1_POFOMO_reinvest.sol 82805.0 True
Similarity: 0.9505527624857396
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract NekoToken {
-function withdraw()
+contract POFOMO {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xb3c5c669d60ba538fa4a3f3262c07e368085fccb_FunFaceToken_withdraw.sol 43481.0 False
File 2: 0x9a5F32b99c15099b676d9892b47F381E227907A8_BEERS_reinvest.sol 88768.0 True
Similarity: 0.9505513335307786
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract FunFaceToken {
-function withdraw()
+contract BEERS {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xb32f6c232c7eeb2f563309a1a7ddcc2f86680070_PowX_withdraw.sol 43525.0 False
File 2: 0x68b1a67786f78b7a9a140c17864da69e3867c333_Pyrgressive_reinvest.sol 107396.5 True
Similarity: 0.9505316043862548
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract PowX {
-function withdraw()
+contract Pyrgressive {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xd5e5a80b6ddcd080dc5161003866614b10e6f9dc_Power2X_reinvest.sol 82351.0 True
File 2: 0xb32f6c232c7eeb2f563309a1a7ddcc2f86680070_PowX_withdraw.sol 43525.0 False
Similarity: 0.9505142715946808
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract Power2X {
-function reinvest()
+contract PowX {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0x18293de649fb8d8e1c8824abd214f7480c61e4a4_ShroomeryFarmer_buyEggs.sol 53254.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_buySeeds.sol 60966.0 True
Similarity: 0.950498670744194
Difference:
--- file1
+++ file2
@@ -1,9 +1,11 @@
-contract ShroomeryFarmer {
-function buyEggs() public payable{
+contract RiceFarmer {
+function buySeeds() public payable{
         require(initialized);
-        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(this.balance,msg.value));
+        uint256 eggsBought=calculateSeedBuy(msg.value,SafeMath.sub(this.balance,msg.value));
         eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
-        ceoAddress.transfer(devFee(msg.value));
-        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
+
+        Divies.redistribution.value(devFee(msg.value))();
+
+        claimedSeeds[msg.sender]=SafeMath.add(claimedSeeds[msg.sender],eggsBought);
     }
 }

File 1: 0x57cff17810be242bc4760c03cd5bcc6ec0879470_POWMlite_withdraw.sol 43504.0 False
File 2: 0x117a36055bf56b0157bd1df3cf45bfd7e01e1663_ETCH3dV_reinvest.sol 82059.0 True
Similarity: 0.9504921445298188
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWMlite {
-function withdraw()
+contract ETCH3dV {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x57cff17810be242bc4760c03cd5bcc6ec0879470_POWMlite_withdraw.sol 43504.0 False
File 2: 0x4b181c8f6124d531cb89d3d4e6faad54c63c30c1_H3D_reinvest.sol 82332.0 True
Similarity: 0.9504842124073554
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWMlite {
-function withdraw()
+contract H3D {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xa572e356fe636db853f0d55493f2f866f0558cde_POWH1337_reinvest.sol 83333.0 True
File 2: 0x57cff17810be242bc4760c03cd5bcc6ec0879470_POWMlite_withdraw.sol 43504.0 False
Similarity: 0.9504810624898504
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWH1337 {
-function reinvest()
+contract POWMlite {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0xb32f6c232c7eeb2f563309a1a7ddcc2f86680070_PowX_withdraw.sol 43525.0 False
File 2: 0x36f6a1353a3e1c008782e86bfe551c6f8b8c3370_Shadow3D_reinvest.sol 83091.0 True
Similarity: 0.9504766270376832
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract PowX {
-function withdraw()
+contract Shadow3D {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xf9c402ac9aa43857e2fbf541ca1d38291d412e3d_AnthillFarmer_collectAnts.sol 53122.0 False
File 2: 0x6cd6215a23890630f39400ce37e3cb5d31304b8c_BankerFarmer_hatchEggs.sol 57384.0 True
Similarity: 0.950471494875721
Difference:
--- file1
+++ file2
@@ -1,19 +1,19 @@
-contract AnthillFarmer {
-function collectAnts(address ref) public{
+contract BankerFarmer {
+function hatchEggs(address ref) public{
         require(initialized);
         if(referrals[msg.sender]==0 && referrals[msg.sender]!=msg.sender){
             referrals[msg.sender]=ref;
         }
-        uint256 antsUsed=getMyAnts();
-        uint256 newAnthill=SafeMath.div(antsUsed,ANTS_TO_COLLECT_1ANTHILL);
-        Anthills[msg.sender]=SafeMath.add(Anthills[msg.sender],newAnthill);
-        claimedAnts[msg.sender]=0;
-        lastCollect[msg.sender]=now;
+        uint256 eggsUsed=getMyEggs();
+        uint256 newBanker=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1BANKER);
+        hatcheryBanker[msg.sender]=SafeMath.add(hatcheryBanker[msg.sender],newBanker);
+        claimedEggs[msg.sender]=0;
+        lastHatch[msg.sender]=now;

-        //send referral ants
-        claimedAnts[referrals[msg.sender]]=SafeMath.add(claimedAnts[referrals[msg.sender]],SafeMath.div(antsUsed,5));
+        //send referral eggs
+        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(eggsUsed,5));

-        //boost market to nerf anthill hoarding
-        marketAnts=SafeMath.add(marketAnts,SafeMath.div(antsUsed,10));
+        //boost market to nerf banker hoarding
+        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,10));
     }
 }

File 1: 0xc7d83c28fe7c9325dad8b54a55a64334420226c2_POWEROFTHREE_reinvest.sol 87885.0 True
File 2: 0x57cff17810be242bc4760c03cd5bcc6ec0879470_POWMlite_withdraw.sol 43504.0 False
Similarity: 0.950460490654291
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWEROFTHREE {
-function reinvest()
+contract POWMlite {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0xae7bcd6673de31017fed61ca915ab36ef2556d24_Defapacoin_withdraw.sol 43547.0 False
File 2: 0xa572e356fe636db853f0d55493f2f866f0558cde_POWH1337_reinvest.sol 83333.0 True
Similarity: 0.9504590989094752
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract Defapacoin {
-function withdraw()
+contract POWH1337 {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_buySeeds.sol 60966.0 True
File 2: 0x0057826d01b84775dbc9b3a5ba1152b095988481_SquirrelFarmer_buyEggs.sol 53379.0 False
Similarity: 0.950456120365292
Difference:
--- file1
+++ file2
@@ -1,11 +1,9 @@
-contract RiceFarmer {
-function buySeeds() public payable{
+contract SquirrelFarmer {
+function buyEggs() public payable{
         require(initialized);
-        uint256 eggsBought=calculateSeedBuy(msg.value,SafeMath.sub(this.balance,msg.value));
+        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(this.balance,msg.value));
         eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
-
-        Divies.redistribution.value(devFee(msg.value))();
-
-        claimedSeeds[msg.sender]=SafeMath.add(claimedSeeds[msg.sender],eggsBought);
+        ceoAddress.transfer(devFee(msg.value));
+        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
     }
 }

File 1: 0x6a40f8b2c7e6eb5bacbd52bc055e230d00168669_CharlieCoin_withdraw.sol 43547.0 False
File 2: 0x117a36055bf56b0157bd1df3cf45bfd7e01e1663_ETCH3dV_reinvest.sol 82059.0 True
Similarity: 0.9504527149281292
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract CharlieCoin {
-function withdraw()
+contract ETCH3dV {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x3b8b95eccce73667305b322fd89e5a148e262f62_MiningRigFarmer_buyEggs.sol 53276.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_buySeeds.sol 60966.0 True
Similarity: 0.9504466165360412
Difference:
--- file1
+++ file2
@@ -1,9 +1,11 @@
-contract MiningRigFarmer {
-function buyEggs() public payable{
+contract RiceFarmer {
+function buySeeds() public payable{
         require(initialized);
-        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(this.balance,msg.value));
+        uint256 eggsBought=calculateSeedBuy(msg.value,SafeMath.sub(this.balance,msg.value));
         eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
-        ceoAddress.transfer(devFee(msg.value));
-        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
+
+        Divies.redistribution.value(devFee(msg.value))();
+
+        claimedSeeds[msg.sender]=SafeMath.add(claimedSeeds[msg.sender],eggsBought);
     }
 }

File 1: 0xae7bcd6673de31017fed61ca915ab36ef2556d24_Defapacoin_withdraw.sol 43547.0 False
File 2: 0x77e79f7c8e256f3fbf009abd4503e5374f93a774_RICEBALLZ_reinvest.sol 82827.0 True
Similarity: 0.9504414650100594
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract Defapacoin {
-function withdraw()
+contract RICEBALLZ {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x6a40f8b2c7e6eb5bacbd52bc055e230d00168669_CharlieCoin_withdraw.sol 43547.0 False
File 2: 0x4650af1d35b0f10da5e68bba2b0b1582a6dcdace_BBB_reinvest.sol 82593.0 True
Similarity: 0.950410415369402
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract CharlieCoin {
-function withdraw()
+contract BBB {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x6a40f8b2c7e6eb5bacbd52bc055e230d00168669_CharlieCoin_withdraw.sol 43547.0 False
File 2: 0x4b181c8f6124d531cb89d3d4e6faad54c63c30c1_H3D_reinvest.sol 82332.0 True
Similarity: 0.9503923149107588
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract CharlieCoin {
-function withdraw()
+contract H3D {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xd9913F9823fA526840869f1cb8F515Bb69E6A51c_DinosaurFarmer_buyEggs.sol 53335.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_buySeeds.sol 60966.0 True
Similarity: 0.9503863349535396
Difference:
--- file1
+++ file2
@@ -1,9 +1,11 @@
-contract DinosaurFarmer {
-function buyEggs() public payable{
+contract RiceFarmer {
+function buySeeds() public payable{
         require(initialized);
-        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(this.balance,msg.value));
+        uint256 eggsBought=calculateSeedBuy(msg.value,SafeMath.sub(this.balance,msg.value));
         eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
-        ceoAddress.transfer(devFee(msg.value));
-        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
+
+        Divies.redistribution.value(devFee(msg.value))();
+
+        claimedSeeds[msg.sender]=SafeMath.add(claimedSeeds[msg.sender],eggsBought);
     }
 }

File 1: 0xbf53CAfd4BC4B559ea5F89cbbF86eb72C7ddA3ae_SwordMaster_buyGolds.sol 53518.0 True
File 2: 0x6c4ca515f04722d079862a03dec1e5c011491e12_ToadFarmer_buyEggs.sol 38269.0 False
Similarity: 0.9503815642133728
Difference:
--- file1
+++ file2
@@ -1,9 +1,9 @@
-contract SwordMaster {
-function buyGolds() public payable{
+contract ToadFarmer {
+function buyEggs() public payable {
         require(initialized);
-        uint256 goldsBought=calculateGoldBuy(msg.value,SafeMath.sub(address(this).balance,msg.value));
-        goldsBought=SafeMath.sub(goldsBought,devFee(goldsBought));
+        uint256 eggsBought = calculateEggBuy(msg.value, SafeMath.sub(address(this).balance, msg.value));
+        eggsBought = SafeMath.sub(eggsBought, devFee(eggsBought));
+        claimedEggs[msg.sender] = SafeMath.add(claimedEggs[msg.sender], eggsBought);
         ceoAddress.transfer(devFee(msg.value));
-        claimedGolds[msg.sender]=SafeMath.add(claimedGolds[msg.sender],goldsBought);
     }
 }

File 1: 0x84eeca28082982abd1d68eadf2c5f509dd181bad_ShroomFarmer_buyEggs.sol 53254.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_buySeeds.sol 60966.0 True
Similarity: 0.9503771630731096
Difference:
--- file1
+++ file2
@@ -1,9 +1,11 @@
-contract ShroomFarmer {
-function buyEggs() public payable{
+contract RiceFarmer {
+function buySeeds() public payable{
         require(initialized);
-        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(this.balance,msg.value));
+        uint256 eggsBought=calculateSeedBuy(msg.value,SafeMath.sub(this.balance,msg.value));
         eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
-        ceoAddress.transfer(devFee(msg.value));
-        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
+
+        Divies.redistribution.value(devFee(msg.value))();
+
+        claimedSeeds[msg.sender]=SafeMath.add(claimedSeeds[msg.sender],eggsBought);
     }
 }

File 1: 0x6cd6215a23890630f39400ce37e3cb5d31304b8c_BankerFarmer_buyEggs.sol 53335.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_buySeeds.sol 60966.0 True
Similarity: 0.950369498934148
Difference:
--- file1
+++ file2
@@ -1,9 +1,11 @@
-contract BankerFarmer {
-function buyEggs() public payable{
+contract RiceFarmer {
+function buySeeds() public payable{
         require(initialized);
-        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(this.balance,msg.value));
+        uint256 eggsBought=calculateSeedBuy(msg.value,SafeMath.sub(this.balance,msg.value));
         eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
-        ceoAddress.transfer(devFee(msg.value));
-        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
+
+        Divies.redistribution.value(devFee(msg.value))();
+
+        claimedSeeds[msg.sender]=SafeMath.add(claimedSeeds[msg.sender],eggsBought);
     }
 }

File 1: 0x8c79b780fa39e183C9eA25f70d1351161f86594e_shrimpyramid_reinvest.sol 82714.0 True
File 2: 0x57cff17810be242bc4760c03cd5bcc6ec0879470_POWMlite_withdraw.sol 43504.0 False
Similarity: 0.9503578816469244
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract shrimpyramid {
-function reinvest()
+contract POWMlite {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0xae7bcd6673de31017fed61ca915ab36ef2556d24_Defapacoin_withdraw.sol 43547.0 False
File 2: 0x748c6ed3f78f5f06ceb76834f195d3a05b7d628a_POWH33_reinvest.sol 82772.0 True
Similarity: 0.950346304848195
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract Defapacoin {
-function withdraw()
+contract POWH33 {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xb3c5c669d60ba538fa4a3f3262c07e368085fccb_FunFaceToken_withdraw.sol 43481.0 False
File 2: 0x68b1a67786f78b7a9a140c17864da69e3867c333_Pyrgressive_reinvest.sol 107396.5 True
Similarity: 0.9503457820643458
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract FunFaceToken {
-function withdraw()
+contract Pyrgressive {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xae7bcd6673de31017fed61ca915ab36ef2556d24_Defapacoin_withdraw.sol 43547.0 False
File 2: 0x560431a917c5bf4f5831935a199d6516472bcff1_POFOMO_reinvest.sol 82805.0 True
Similarity: 0.950323765165724
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract Defapacoin {
-function withdraw()
+contract POFOMO {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x9db43bd57e90e29be009229b38a96dff79bdc076_Divium_withdraw.sol 43692.0 False
File 2: 0x117a36055bf56b0157bd1df3cf45bfd7e01e1663_ETCH3dV_reinvest.sol 82059.0 True
Similarity: 0.9503129482781753
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract Divium {
-function withdraw()
+contract ETCH3dV {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x9db43bd57e90e29be009229b38a96dff79bdc076_Divium_withdraw.sol 43692.0 False
File 2: 0x4b181c8f6124d531cb89d3d4e6faad54c63c30c1_H3D_reinvest.sol 82332.0 True
Similarity: 0.9503063101577804
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract Divium {
-function withdraw()
+contract H3D {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x9d0d6be62dc3b5712a23cf3de3fa95f372555e23_BLING_reinvest.sol 88648.0 True
File 2: 0x6a40f8b2c7e6eb5bacbd52bc055e230d00168669_CharlieCoin_withdraw.sol 43547.0 False
Similarity: 0.9502937804640822
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract BLING {
-function reinvest()
+contract CharlieCoin {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0x4042ff0b0ff691a1549d67ede0479a1f0d12f6ba_Cosby_withdraw.sol 43517.0 False
File 2: 0x117a36055bf56b0157bd1df3cf45bfd7e01e1663_ETCH3dV_reinvest.sol 82059.0 True
Similarity: 0.9502759898656928
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract Cosby {
-function withdraw()
+contract ETCH3dV {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x4b181c8f6124d531cb89d3d4e6faad54c63c30c1_H3D_reinvest.sol 82332.0 True
File 2: 0x4042ff0b0ff691a1549d67ede0479a1f0d12f6ba_Cosby_withdraw.sol 43517.0 False
Similarity: 0.950262713523307
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract H3D {
-function reinvest()
+contract Cosby {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0x9d0d6be62dc3b5712a23cf3de3fa95f372555e23_BLING_reinvest.sol 88648.0 True
File 2: 0x57cff17810be242bc4760c03cd5bcc6ec0879470_POWMlite_withdraw.sol 43504.0 False
Similarity: 0.9502504483870436
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract BLING {
-function reinvest()
+contract POWMlite {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0xc7d83c28fe7c9325dad8b54a55a64334420226c2_POWEROFTHREE_reinvest.sol 87885.0 True
File 2: 0x6a40f8b2c7e6eb5bacbd52bc055e230d00168669_CharlieCoin_withdraw.sol 43547.0 False
Similarity: 0.9502365987414654
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWEROFTHREE {
-function reinvest()
+contract CharlieCoin {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0x1a4f7a5208c7dd4cf24633ac4d42e41b21e3d5f7_CrocsFarmer_buyEggs.sol 53313.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_buySeeds.sol 60966.0 True
Similarity: 0.9502364623990528
Difference:
--- file1
+++ file2
@@ -1,9 +1,11 @@
-contract CrocsFarmer {
-function buyEggs() public payable{
+contract RiceFarmer {
+function buySeeds() public payable{
         require(initialized);
-        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(this.balance,msg.value));
+        uint256 eggsBought=calculateSeedBuy(msg.value,SafeMath.sub(this.balance,msg.value));
         eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
-        ceoAddress.transfer(devFee(msg.value));
-        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
+
+        Divies.redistribution.value(devFee(msg.value))();
+
+        claimedSeeds[msg.sender]=SafeMath.add(claimedSeeds[msg.sender],eggsBought);
     }
 }

File 1: 0x9a5F32b99c15099b676d9892b47F381E227907A8_BEERS_reinvest.sol 88768.0 True
File 2: 0x6a40f8b2c7e6eb5bacbd52bc055e230d00168669_CharlieCoin_withdraw.sol 43547.0 False
Similarity: 0.950234229700564
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract BEERS {
-function reinvest()
+contract CharlieCoin {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0x8c79b780fa39e183C9eA25f70d1351161f86594e_shrimpyramid_reinvest.sol 82714.0 True
File 2: 0x6a40f8b2c7e6eb5bacbd52bc055e230d00168669_CharlieCoin_withdraw.sol 43547.0 False
Similarity: 0.9501902189353312
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract shrimpyramid {
-function reinvest()
+contract CharlieCoin {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0x57cff17810be242bc4760c03cd5bcc6ec0879470_POWMlite_withdraw.sol 43504.0 False
File 2: 0x560431a917c5bf4f5831935a199d6516472bcff1_POFOMO_reinvest.sol 82805.0 True
Similarity: 0.9501735132799862
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWMlite {
-function withdraw()
+contract POFOMO {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_buySeeds.sol 60966.0 True
File 2: 0x0aa39dfb6968c279ceddfab187668001e3df3dcb_FairyFarmer_buyEggs.sol 53379.0 False
Similarity: 0.9501687164223857
Difference:
--- file1
+++ file2
@@ -1,11 +1,9 @@
-contract RiceFarmer {
-function buySeeds() public payable{
+contract FairyFarmer {
+function buyEggs() public payable{
         require(initialized);
-        uint256 eggsBought=calculateSeedBuy(msg.value,SafeMath.sub(this.balance,msg.value));
+        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(this.balance,msg.value));
         eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
-
-        Divies.redistribution.value(devFee(msg.value))();
-
-        claimedSeeds[msg.sender]=SafeMath.add(claimedSeeds[msg.sender],eggsBought);
+        ceoAddress.transfer(devFee(msg.value));
+        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
     }
 }

File 1: 0x9db43bd57e90e29be009229b38a96dff79bdc076_Divium_withdraw.sol 43692.0 False
File 2: 0x8c79b780fa39e183C9eA25f70d1351161f86594e_shrimpyramid_reinvest.sol 82714.0 True
Similarity: 0.9501638970592692
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract Divium {
-function withdraw()
+contract shrimpyramid {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x77e79f7c8e256f3fbf009abd4503e5374f93a774_RICEBALLZ_reinvest.sol 82827.0 True
File 2: 0x57cff17810be242bc4760c03cd5bcc6ec0879470_POWMlite_withdraw.sol 43504.0 False
Similarity: 0.9501607566286512
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract RICEBALLZ {
-function reinvest()
+contract POWMlite {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_buySeeds.sol 60966.0 True
File 2: 0x09f6742e42daafae735e14ec53b5ee95b66c2886_TittyFarmer_buyEggs.sol 53335.0 False
Similarity: 0.9501569471746651
Difference:
--- file1
+++ file2
@@ -1,11 +1,9 @@
-contract RiceFarmer {
-function buySeeds() public payable{
+contract TittyFarmer {
+function buyEggs() public payable{
         require(initialized);
-        uint256 eggsBought=calculateSeedBuy(msg.value,SafeMath.sub(this.balance,msg.value));
+        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(this.balance,msg.value));
         eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
-
-        Divies.redistribution.value(devFee(msg.value))();
-
-        claimedSeeds[msg.sender]=SafeMath.add(claimedSeeds[msg.sender],eggsBought);
+        ceoAddress.transfer(devFee(msg.value));
+        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
     }
 }

File 1: 0xc7d83c28fe7c9325dad8b54a55a64334420226c2_POWEROFTHREE_reinvest.sol 87885.0 True
File 2: 0x9db43bd57e90e29be009229b38a96dff79bdc076_Divium_withdraw.sol 43692.0 False
Similarity: 0.95014252897565
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWEROFTHREE {
-function reinvest()
+contract Divium {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0x861ab771d6787ac7eecc2d33b6fed63a06ae7d1c_NekoToken_withdraw.sol 43481.0 False
File 2: 0x68b1a67786f78b7a9a140c17864da69e3867c333_Pyrgressive_reinvest.sol 107396.5 True
Similarity: 0.95013333962558
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract NekoToken {
-function withdraw()
+contract Pyrgressive {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x8c79b780fa39e183C9eA25f70d1351161f86594e_shrimpyramid_reinvest.sol 82714.0 True
File 2: 0x4042ff0b0ff691a1549d67ede0479a1f0d12f6ba_Cosby_withdraw.sol 43517.0 False
Similarity: 0.95013250627616
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract shrimpyramid {
-function reinvest()
+contract Cosby {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0xb32f6c232c7eeb2f563309a1a7ddcc2f86680070_PowX_withdraw.sol 43525.0 False
File 2: 0x96f3e4086575e2b9d76ab5b1871a94b8b3a08d39_CarlosMatos_reinvest.sol 82835.0 True
Similarity: 0.9501255074997752
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract PowX {
-function withdraw()
+contract CarlosMatos {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x3dc17F140E6a01F99ea3123cdcB4aEA3a85E8C79_Helios_withdraw.sol 43670.0 False
File 2: 0x117a36055bf56b0157bd1df3cf45bfd7e01e1663_ETCH3dV_reinvest.sol 82059.0 True
Similarity: 0.9501118547765172
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract Helios {
-function withdraw()
+contract ETCH3dV {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xc7d83c28fe7c9325dad8b54a55a64334420226c2_POWEROFTHREE_reinvest.sol 87885.0 True
File 2: 0x4042ff0b0ff691a1549d67ede0479a1f0d12f6ba_Cosby_withdraw.sol 43517.0 False
Similarity: 0.9500992726756292
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWEROFTHREE {
-function reinvest()
+contract Cosby {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0x9db43bd57e90e29be009229b38a96dff79bdc076_Divium_withdraw.sol 43692.0 False
File 2: 0x9d0d6be62dc3b5712a23cf3de3fa95f372555e23_BLING_reinvest.sol 88648.0 True
Similarity: 0.9500980854656236
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract Divium {
-function withdraw()
+contract BLING {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x57cff17810be242bc4760c03cd5bcc6ec0879470_POWMlite_withdraw.sol 43504.0 False
File 2: 0x4650af1d35b0f10da5e68bba2b0b1582a6dcdace_BBB_reinvest.sol 82593.0 True
Similarity: 0.9500979624695294
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWMlite {
-function withdraw()
+contract BBB {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x4b181c8f6124d531cb89d3d4e6faad54c63c30c1_H3D_reinvest.sol 82332.0 True
File 2: 0x3dc17F140E6a01F99ea3123cdcB4aEA3a85E8C79_Helios_withdraw.sol 43670.0 False
Similarity: 0.950089879017177
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract H3D {
-function reinvest()
+contract Helios {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0x21732476ec79bb32373deaf58d796755664780e6_TurtleFarmer_buyEggs.sol 53357.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_buySeeds.sol 60966.0 True
Similarity: 0.9500798399761748
Difference:
--- file1
+++ file2
@@ -1,9 +1,11 @@
-contract TurtleFarmer {
-function buyEggs() public payable{
+contract RiceFarmer {
+function buySeeds() public payable{
         require(initialized);
-        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(this.balance,msg.value));
+        uint256 eggsBought=calculateSeedBuy(msg.value,SafeMath.sub(this.balance,msg.value));
         eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
-        ceoAddress.transfer(devFee(msg.value));
-        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
+
+        Divies.redistribution.value(devFee(msg.value))();
+
+        claimedSeeds[msg.sender]=SafeMath.add(claimedSeeds[msg.sender],eggsBought);
     }
 }

File 1: 0xdc24f9cc79f802587b56f27a7db0833e40c8a22c_FuckCoin_withdraw.sol 43504.0 False
File 2: 0x117a36055bf56b0157bd1df3cf45bfd7e01e1663_ETCH3dV_reinvest.sol 82059.0 True
Similarity: 0.9500626235911436
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract FuckCoin {
-function withdraw()
+contract ETCH3dV {
+function reinvest()
         onlyStronghands()
         public
     {
-
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false);
-
-
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

-
-        onWithdraw(_customerAddress, _dividends);
+        // fire event
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x4702a04b84dbd61a7494283349444ea784ba9593_AlienFarmer_buyEggs.sol 53313.0 False
File 2: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_buySeeds.sol 60966.0 True
Similarity: 0.9500524813347256
Difference:
--- file1
+++ file2
@@ -1,9 +1,11 @@
-contract AlienFarmer {
-function buyEggs() public payable{
+contract RiceFarmer {
+function buySeeds() public payable{
         require(initialized);
-        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(this.balance,msg.value));
+        uint256 eggsBought=calculateSeedBuy(msg.value,SafeMath.sub(this.balance,msg.value));
         eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
-        ceoAddress.transfer(devFee(msg.value));
-        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
+
+        Divies.redistribution.value(devFee(msg.value))();
+
+        claimedSeeds[msg.sender]=SafeMath.add(claimedSeeds[msg.sender],eggsBought);
     }
 }

File 1: 0xa572e356fe636db853f0d55493f2f866f0558cde_POWH1337_reinvest.sol 83333.0 True
File 2: 0x6a40f8b2c7e6eb5bacbd52bc055e230d00168669_CharlieCoin_withdraw.sol 43547.0 False
Similarity: 0.9500522208397844
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract POWH1337 {
-function reinvest()
+contract CharlieCoin {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0xd25edd02e8545e5bf3f053530d0e0928d53e160b_PODevidJeck_reinvest.sol 82728.0 True
File 2: 0xb32f6c232c7eeb2f563309a1a7ddcc2f86680070_PowX_withdraw.sol 43525.0 False
Similarity: 0.9500485128770628
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract PODevidJeck {
-function reinvest()
+contract PowX {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0x9d0d6be62dc3b5712a23cf3de3fa95f372555e23_BLING_reinvest.sol 88648.0 True
File 2: 0x4042ff0b0ff691a1549d67ede0479a1f0d12f6ba_Cosby_withdraw.sol 43517.0 False
Similarity: 0.9500377386318132
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract BLING {
-function reinvest()
+contract Cosby {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0x9db43bd57e90e29be009229b38a96dff79bdc076_Divium_withdraw.sol 43692.0 False
File 2: 0x4650af1d35b0f10da5e68bba2b0b1582a6dcdace_BBB_reinvest.sol 82593.0 True
Similarity: 0.9500346532916856
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract Divium {
-function withdraw()
+contract BBB {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0xdc24f9cc79f802587b56f27a7db0833e40c8a22c_FuckCoin_withdraw.sol 43504.0 False
File 2: 0x4b181c8f6124d531cb89d3d4e6faad54c63c30c1_H3D_reinvest.sol 82332.0 True
Similarity: 0.9500269198966248
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract FuckCoin {
-function withdraw()
+contract H3D {
+function reinvest()
         onlyStronghands()
         public
     {
-
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false);
-
-
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

-
-        onWithdraw(_customerAddress, _dividends);
+        // fire event
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

File 1: 0x77e79f7c8e256f3fbf009abd4503e5374f93a774_RICEBALLZ_reinvest.sol 82827.0 True
File 2: 0x6a40f8b2c7e6eb5bacbd52bc055e230d00168669_CharlieCoin_withdraw.sol 43547.0 False
Similarity: 0.9500244999279792
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract RICEBALLZ {
-function reinvest()
+contract CharlieCoin {
+function withdraw()
         onlyStronghands()
         public
     {
-        // fetch dividends
-        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+        // setup data
+        address _customerAddress = msg.sender;
+        uint256 _dividends = myDividends(false); // get ref. bonus later in the code

-        // pay out the dividends virtually
-        address _customerAddress = msg.sender;
+        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // retrieve ref. bonus
+        // add ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // dispatch a buy order with the virtualized "withdrawn dividends"
-        uint256 _tokens = purchaseTokens(_dividends, 0x0);
+        // lambo delivery service
+        _customerAddress.transfer(_dividends);

         // fire event
-        onReinvestment(_customerAddress, _dividends, _tokens);
+        onWithdraw(_customerAddress, _dividends);
     }
 }

File 1: 0x1772eea64df54e19728e695008d31c1289ac620d_RiceFarmer_buySeeds.sol 60966.0 True
File 2: 0x163c64805c98fa2732f13030de457165f89493f9_HarjFarmer_buyEggs.sol 53335.0 False
Similarity: 0.9500226564672086
Difference:
--- file1
+++ file2
@@ -1,11 +1,9 @@
-contract RiceFarmer {
-function buySeeds() public payable{
+contract HarjFarmer {
+function buyEggs() public payable{
         require(initialized);
-        uint256 eggsBought=calculateSeedBuy(msg.value,SafeMath.sub(this.balance,msg.value));
+        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(this.balance,msg.value));
         eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
-
-        Divies.redistribution.value(devFee(msg.value))();
-
-        claimedSeeds[msg.sender]=SafeMath.add(claimedSeeds[msg.sender],eggsBought);
+        ceoAddress.transfer(devFee(msg.value));
+        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
     }
 }

File 1: 0x6d6db51e3e4838369676508ce25db64f4ca7e5e4_EtherX_withdraw.sol 43482.0 False
File 2: 0x3dc17F140E6a01F99ea3123cdcB4aEA3a85E8C79_Helios_reinvest.sol 82453.0 True
Similarity: 0.9500134515652986
Difference:
--- file1
+++ file2
@@ -1,23 +1,23 @@
-contract EtherX {
-function withdraw()
+contract Helios {
+function reinvest()
         onlyStronghands()
         public
     {
-        // setup data
+        // fetch dividends
+        uint256 _dividends = myDividends(false); // retrieve ref. bonus later in the code
+
+        // pay out the dividends virtually
         address _customerAddress = msg.sender;
-        uint256 _dividends = myDividends(false); // get ref. bonus later in the code
-
-        // update dividend tracker
         payoutsTo_[_customerAddress] +=  (int256) (_dividends * magnitude);

-        // add ref. bonus
+        // retrieve ref. bonus
         _dividends += referralBalance_[_customerAddress];
         referralBalance_[_customerAddress] = 0;

-        // lambo delivery service
-        _customerAddress.transfer(_dividends);
+        // dispatch a buy order with the virtualized "withdrawn dividends"
+        uint256 _tokens = purchaseTokens(_dividends, 0x0);

         // fire event
-        onWithdraw(_customerAddress, _dividends);
+        onReinvestment(_customerAddress, _dividends, _tokens);
     }
 }

Pair found: 295